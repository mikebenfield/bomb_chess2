program bomb_chess2.aleo;

struct PlacedPiece:
    square as field;
    piece as field;

struct Board:
    white as [PlacedPiece; 16u32];
    black as [PlacedPiece; 16u32];
    ply as field;
    odd_ply as boolean;

struct Game:
    white as address;
    black as address;
    board as Board;
    status as field;

record PlayerState:
    owner as address.private;
    game as Game.private;
    bomb as field.private;

record GameToken:
    owner as address.private;
    game as Game.private;


function invite:
    input r0 as address.private;
    input r1 as field.private;
    lt r1 64field into r2;
    assert.eq r2 true;
    cast 0field 1field into r3 as PlacedPiece;
    cast 1field 1field into r4 as PlacedPiece;
    cast 2field 1field into r5 as PlacedPiece;
    cast 3field 1field into r6 as PlacedPiece;
    cast 4field 1field into r7 as PlacedPiece;
    cast 5field 1field into r8 as PlacedPiece;
    cast 6field 1field into r9 as PlacedPiece;
    cast 7field 1field into r10 as PlacedPiece;
    cast 8field 2field into r11 as PlacedPiece;
    cast 9field 3field into r12 as PlacedPiece;
    cast 10field 4field into r13 as PlacedPiece;
    cast 11field 5field into r14 as PlacedPiece;
    cast 12field 6field into r15 as PlacedPiece;
    cast 13field 4field into r16 as PlacedPiece;
    cast 14field 3field into r17 as PlacedPiece;
    cast 15field 2field into r18 as PlacedPiece;
    cast  r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 into r19 as [PlacedPiece; 16u32];
    cast 48field 1field into r20 as PlacedPiece;
    cast 49field 1field into r21 as PlacedPiece;
    cast 50field 1field into r22 as PlacedPiece;
    cast 51field 1field into r23 as PlacedPiece;
    cast 52field 1field into r24 as PlacedPiece;
    cast 53field 1field into r25 as PlacedPiece;
    cast 54field 1field into r26 as PlacedPiece;
    cast 55field 1field into r27 as PlacedPiece;
    cast 56field 2field into r28 as PlacedPiece;
    cast 57field 3field into r29 as PlacedPiece;
    cast 58field 4field into r30 as PlacedPiece;
    cast 59field 5field into r31 as PlacedPiece;
    cast 60field 6field into r32 as PlacedPiece;
    cast 61field 4field into r33 as PlacedPiece;
    cast 62field 3field into r34 as PlacedPiece;
    cast 63field 2field into r35 as PlacedPiece;
    cast  r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r32 r33 r34 r35 into r36 as [PlacedPiece; 16u32];
    cast r19 r36 0field false into r37 as Board;
    cast self.caller r0 r37 0field into r38 as Game;
    cast self.caller r38 r1 into r39 as PlayerState.record;
    cast r0 r38 into r40 as GameToken.record;
    output r39 as PlayerState.record;
    output r40 as GameToken.record;


function accept_invite:
    input r0 as GameToken.record;
    input r1 as field.private;
    lt r1 64field into r2;
    assert.eq r2 true;
    assert.eq self.caller r0.game.black;
    assert.eq r0.game.board.ply 0field;
    assert.eq r0.game.board.odd_ply false;
    cast self.caller r0.game r1 into r3 as PlayerState.record;
    output r3 as PlayerState.record;


function accept_move:
    input r0 as PlayerState.record;
    input r1 as GameToken.record;
    add r0.game.board.ply 1field into r2;
    assert.eq r2 r1.game.board.ply;
    assert.eq r0.game.white r1.game.white;
    assert.eq r0.game.black r1.game.black;
    cast self.caller r1.game r0.bomb into r3 as PlayerState.record;
    output r3 as PlayerState.record;






closure access:
    input r0 as [PlacedPiece; 16u32];
    input r1 as field;
    is.eq r1 r0[0u32].square into r2;
    is.eq r1 r0[1u32].square into r3;
    is.eq r1 r0[2u32].square into r4;
    is.eq r1 r0[3u32].square into r5;
    is.eq r1 r0[4u32].square into r6;
    is.eq r1 r0[5u32].square into r7;
    is.eq r1 r0[6u32].square into r8;
    is.eq r1 r0[7u32].square into r9;
    is.eq r1 r0[8u32].square into r10;
    is.eq r1 r0[9u32].square into r11;
    is.eq r1 r0[10u32].square into r12;
    is.eq r1 r0[11u32].square into r13;
    is.eq r1 r0[12u32].square into r14;
    is.eq r1 r0[13u32].square into r15;
    is.eq r1 r0[14u32].square into r16;
    is.eq r1 r0[15u32].square into r17;
    ternary r17 r0[15u32].piece 0field into r18;
    ternary r16 r0[14u32].piece r18 into r19;
    ternary r15 r0[13u32].piece r19 into r20;
    ternary r14 r0[12u32].piece r20 into r21;
    ternary r13 r0[11u32].piece r21 into r22;
    ternary r12 r0[10u32].piece r22 into r23;
    ternary r11 r0[9u32].piece r23 into r24;
    ternary r10 r0[8u32].piece r24 into r25;
    ternary r9 r0[7u32].piece r25 into r26;
    ternary r8 r0[6u32].piece r26 into r27;
    ternary r7 r0[5u32].piece r27 into r28;
    ternary r6 r0[4u32].piece r28 into r29;
    ternary r5 r0[3u32].piece r29 into r30;
    ternary r4 r0[2u32].piece r30 into r31;
    ternary r3 r0[1u32].piece r31 into r32;
    ternary r2 r0[0u32].piece r32 into r33;
    output r33 as field;










closure go_dir:
    input r0 as field;
    input r1 as field;
    is.eq r0 64field into r2;
    lt r0 8field into r3;
    gte r0 56field into r4;
    is.eq r0 0field into r5;
    is.eq r0 8field into r6;
    or r5 r6 into r7;
    is.eq r0 16field into r8;
    or r7 r8 into r9;
    is.eq r0 24field into r10;
    or r9 r10 into r11;
    is.eq r0 32field into r12;
    or r11 r12 into r13;
    is.eq r0 40field into r14;
    or r13 r14 into r15;
    is.eq r0 48field into r16;
    or r15 r16 into r17;
    is.eq r0 56field into r18;
    or r17 r18 into r19;
    is.eq r0 7field into r20;
    is.eq r0 15field into r21;
    or r20 r21 into r22;
    is.eq r0 23field into r23;
    or r22 r23 into r24;
    is.eq r0 31field into r25;
    or r24 r25 into r26;
    is.eq r0 39field into r27;
    or r26 r27 into r28;
    is.eq r0 47field into r29;
    or r28 r29 into r30;
    is.eq r0 55field into r31;
    or r30 r31 into r32;
    is.eq r0 63field into r33;
    or r32 r33 into r34;
    is.eq r1 4field into r35;
    is.eq r1 3field into r36;
    or r35 r36 into r37;
    is.eq r1 5field into r38;
    or r37 r38 into r39;
    is.eq r1 0field into r40;
    is.eq r1 1field into r41;
    or r40 r41 into r42;
    is.eq r1 7field into r43;
    or r42 r43 into r44;
    is.eq r1 2field into r45;
    is.eq r1 3field into r46;
    or r45 r46 into r47;
    is.eq r1 1field into r48;
    or r47 r48 into r49;
    is.eq r1 6field into r50;
    is.eq r1 5field into r51;
    or r50 r51 into r52;
    is.eq r1 7field into r53;
    or r52 r53 into r54;
    is.eq r1 0field into r55;
    add r0 8field into r56;
    is.eq r1 1field into r57;
    add r0 7field into r58;
    is.eq r1 2field into r59;
    add r0 1field into r60;
    is.eq r1 3field into r61;
    sub r0 7field into r62;
    is.eq r1 4field into r63;
    sub r0 8field into r64;
    is.eq r1 5field into r65;
    sub r0 9field into r66;
    is.eq r1 6field into r67;
    sub r0 1field into r68;
    is.eq r1 7field into r69;
    add r0 9field into r70;
    assert.eq false true;
    ternary r69 r70 0field into r71;
    ternary r67 r68 r71 into r72;
    ternary r65 r66 r72 into r73;
    ternary r63 r64 r73 into r74;
    ternary r61 r62 r74 into r75;
    ternary r59 r60 r75 into r76;
    ternary r57 r58 r76 into r77;
    ternary r55 r56 r77 into r78;
    and r34 r54 into r79;
    ternary r79 64field r78 into r80;
    and r19 r49 into r81;
    ternary r81 64field r80 into r82;
    and r4 r44 into r83;
    ternary r83 64field r82 into r84;
    and r3 r39 into r85;
    ternary r85 64field r84 into r86;
    ternary r2 64field r86 into r87;
    output r87 as field;


closure do_move:
    input r0 as [PlacedPiece; 16u32];
    input r1 as field;
    input r2 as field;
    lt r1 64field into r3;
    assert.eq r3 true;
    lte r2 64field into r4;
    assert.eq r4 true;
    is.eq r1 r0[0u32].square into r5;
    is.eq r1 r0[1u32].square into r6;
    is.eq r1 r0[2u32].square into r7;
    is.eq r1 r0[3u32].square into r8;
    is.eq r1 r0[4u32].square into r9;
    is.eq r1 r0[5u32].square into r10;
    is.eq r1 r0[6u32].square into r11;
    is.eq r1 r0[7u32].square into r12;
    is.eq r1 r0[8u32].square into r13;
    is.eq r1 r0[9u32].square into r14;
    is.eq r1 r0[10u32].square into r15;
    is.eq r1 r0[11u32].square into r16;
    is.eq r1 r0[12u32].square into r17;
    is.eq r1 r0[13u32].square into r18;
    is.eq r1 r0[14u32].square into r19;
    is.eq r1 r0[15u32].square into r20;
    not r5 into r21;
    not r6 into r22;
    and r21 r22 into r23;
    not r7 into r24;
    and r23 r24 into r25;
    not r8 into r26;
    and r25 r26 into r27;
    not r9 into r28;
    and r27 r28 into r29;
    not r10 into r30;
    and r29 r30 into r31;
    not r11 into r32;
    and r31 r32 into r33;
    not r12 into r34;
    and r33 r34 into r35;
    not r13 into r36;
    and r35 r36 into r37;
    not r14 into r38;
    and r37 r38 into r39;
    not r15 into r40;
    and r39 r40 into r41;
    not r16 into r42;
    and r41 r42 into r43;
    not r17 into r44;
    and r43 r44 into r45;
    not r18 into r46;
    and r45 r46 into r47;
    not r19 into r48;
    and r47 r48 into r49;
    not r20 into r50;
    and r49 r50 into r51;
    not r51 into r52;
    or r52 false into r53;
    assert.eq r53 true;
    ternary r20 r2 r0[15u32].square into r54;
    ternary r19 r2 r0[14u32].square into r55;
    ternary r19 r0[15u32].square r54 into r56;
    ternary r18 r2 r0[13u32].square into r57;
    ternary r18 r0[14u32].square r55 into r58;
    ternary r18 r0[15u32].square r56 into r59;
    ternary r17 r2 r0[12u32].square into r60;
    ternary r17 r0[13u32].square r57 into r61;
    ternary r17 r0[14u32].square r58 into r62;
    ternary r17 r0[15u32].square r59 into r63;
    ternary r16 r2 r0[11u32].square into r64;
    ternary r16 r0[12u32].square r60 into r65;
    ternary r16 r0[13u32].square r61 into r66;
    ternary r16 r0[14u32].square r62 into r67;
    ternary r16 r0[15u32].square r63 into r68;
    ternary r15 r2 r0[10u32].square into r69;
    ternary r15 r0[11u32].square r64 into r70;
    ternary r15 r0[12u32].square r65 into r71;
    ternary r15 r0[13u32].square r66 into r72;
    ternary r15 r0[14u32].square r67 into r73;
    ternary r15 r0[15u32].square r68 into r74;
    ternary r14 r2 r0[9u32].square into r75;
    ternary r14 r0[10u32].square r69 into r76;
    ternary r14 r0[11u32].square r70 into r77;
    ternary r14 r0[12u32].square r71 into r78;
    ternary r14 r0[13u32].square r72 into r79;
    ternary r14 r0[14u32].square r73 into r80;
    ternary r14 r0[15u32].square r74 into r81;
    ternary r13 r2 r0[8u32].square into r82;
    ternary r13 r0[9u32].square r75 into r83;
    ternary r13 r0[10u32].square r76 into r84;
    ternary r13 r0[11u32].square r77 into r85;
    ternary r13 r0[12u32].square r78 into r86;
    ternary r13 r0[13u32].square r79 into r87;
    ternary r13 r0[14u32].square r80 into r88;
    ternary r13 r0[15u32].square r81 into r89;
    ternary r12 r2 r0[7u32].square into r90;
    ternary r12 r0[8u32].square r82 into r91;
    ternary r12 r0[9u32].square r83 into r92;
    ternary r12 r0[10u32].square r84 into r93;
    ternary r12 r0[11u32].square r85 into r94;
    ternary r12 r0[12u32].square r86 into r95;
    ternary r12 r0[13u32].square r87 into r96;
    ternary r12 r0[14u32].square r88 into r97;
    ternary r12 r0[15u32].square r89 into r98;
    ternary r11 r2 r0[6u32].square into r99;
    ternary r11 r0[7u32].square r90 into r100;
    ternary r11 r0[8u32].square r91 into r101;
    ternary r11 r0[9u32].square r92 into r102;
    ternary r11 r0[10u32].square r93 into r103;
    ternary r11 r0[11u32].square r94 into r104;
    ternary r11 r0[12u32].square r95 into r105;
    ternary r11 r0[13u32].square r96 into r106;
    ternary r11 r0[14u32].square r97 into r107;
    ternary r11 r0[15u32].square r98 into r108;
    ternary r10 r2 r0[5u32].square into r109;
    ternary r10 r0[6u32].square r99 into r110;
    ternary r10 r0[7u32].square r100 into r111;
    ternary r10 r0[8u32].square r101 into r112;
    ternary r10 r0[9u32].square r102 into r113;
    ternary r10 r0[10u32].square r103 into r114;
    ternary r10 r0[11u32].square r104 into r115;
    ternary r10 r0[12u32].square r105 into r116;
    ternary r10 r0[13u32].square r106 into r117;
    ternary r10 r0[14u32].square r107 into r118;
    ternary r10 r0[15u32].square r108 into r119;
    ternary r9 r2 r0[4u32].square into r120;
    ternary r9 r0[5u32].square r109 into r121;
    ternary r9 r0[6u32].square r110 into r122;
    ternary r9 r0[7u32].square r111 into r123;
    ternary r9 r0[8u32].square r112 into r124;
    ternary r9 r0[9u32].square r113 into r125;
    ternary r9 r0[10u32].square r114 into r126;
    ternary r9 r0[11u32].square r115 into r127;
    ternary r9 r0[12u32].square r116 into r128;
    ternary r9 r0[13u32].square r117 into r129;
    ternary r9 r0[14u32].square r118 into r130;
    ternary r9 r0[15u32].square r119 into r131;
    ternary r8 r2 r0[3u32].square into r132;
    ternary r8 r0[4u32].square r120 into r133;
    ternary r8 r0[5u32].square r121 into r134;
    ternary r8 r0[6u32].square r122 into r135;
    ternary r8 r0[7u32].square r123 into r136;
    ternary r8 r0[8u32].square r124 into r137;
    ternary r8 r0[9u32].square r125 into r138;
    ternary r8 r0[10u32].square r126 into r139;
    ternary r8 r0[11u32].square r127 into r140;
    ternary r8 r0[12u32].square r128 into r141;
    ternary r8 r0[13u32].square r129 into r142;
    ternary r8 r0[14u32].square r130 into r143;
    ternary r8 r0[15u32].square r131 into r144;
    ternary r7 r2 r0[2u32].square into r145;
    ternary r7 r0[3u32].square r132 into r146;
    ternary r7 r0[4u32].square r133 into r147;
    ternary r7 r0[5u32].square r134 into r148;
    ternary r7 r0[6u32].square r135 into r149;
    ternary r7 r0[7u32].square r136 into r150;
    ternary r7 r0[8u32].square r137 into r151;
    ternary r7 r0[9u32].square r138 into r152;
    ternary r7 r0[10u32].square r139 into r153;
    ternary r7 r0[11u32].square r140 into r154;
    ternary r7 r0[12u32].square r141 into r155;
    ternary r7 r0[13u32].square r142 into r156;
    ternary r7 r0[14u32].square r143 into r157;
    ternary r7 r0[15u32].square r144 into r158;
    ternary r6 r2 r0[1u32].square into r159;
    ternary r6 r0[2u32].square r145 into r160;
    ternary r6 r0[3u32].square r146 into r161;
    ternary r6 r0[4u32].square r147 into r162;
    ternary r6 r0[5u32].square r148 into r163;
    ternary r6 r0[6u32].square r149 into r164;
    ternary r6 r0[7u32].square r150 into r165;
    ternary r6 r0[8u32].square r151 into r166;
    ternary r6 r0[9u32].square r152 into r167;
    ternary r6 r0[10u32].square r153 into r168;
    ternary r6 r0[11u32].square r154 into r169;
    ternary r6 r0[12u32].square r155 into r170;
    ternary r6 r0[13u32].square r156 into r171;
    ternary r6 r0[14u32].square r157 into r172;
    ternary r6 r0[15u32].square r158 into r173;
    ternary r5 r2 r0[0u32].square into r174;
    ternary r5 r0[1u32].square r159 into r175;
    ternary r5 r0[2u32].square r160 into r176;
    ternary r5 r0[3u32].square r161 into r177;
    ternary r5 r0[4u32].square r162 into r178;
    ternary r5 r0[5u32].square r163 into r179;
    ternary r5 r0[6u32].square r164 into r180;
    ternary r5 r0[7u32].square r165 into r181;
    ternary r5 r0[8u32].square r166 into r182;
    ternary r5 r0[9u32].square r167 into r183;
    ternary r5 r0[10u32].square r168 into r184;
    ternary r5 r0[11u32].square r169 into r185;
    ternary r5 r0[12u32].square r170 into r186;
    ternary r5 r0[13u32].square r171 into r187;
    ternary r5 r0[14u32].square r172 into r188;
    ternary r5 r0[15u32].square r173 into r189;
    cast r174 r0[0u32].piece into r190 as PlacedPiece;
    cast r175 r0[1u32].piece into r191 as PlacedPiece;
    cast r176 r0[2u32].piece into r192 as PlacedPiece;
    cast r177 r0[3u32].piece into r193 as PlacedPiece;
    cast r178 r0[4u32].piece into r194 as PlacedPiece;
    cast r179 r0[5u32].piece into r195 as PlacedPiece;
    cast r180 r0[6u32].piece into r196 as PlacedPiece;
    cast r181 r0[7u32].piece into r197 as PlacedPiece;
    cast r182 r0[8u32].piece into r198 as PlacedPiece;
    cast r183 r0[9u32].piece into r199 as PlacedPiece;
    cast r184 r0[1u32].piece into r200 as PlacedPiece;
    cast r185 r0[1u32].piece into r201 as PlacedPiece;
    cast r186 r0[1u32].piece into r202 as PlacedPiece;
    cast r187 r0[1u32].piece into r203 as PlacedPiece;
    cast r188 r0[1u32].piece into r204 as PlacedPiece;
    cast r189 r0[1u32].piece into r205 as PlacedPiece;
    cast  r190 r191 r192 r193 r194 r195 r196 r197 r198 r199 r200 r201 r202 r203 r204 r205 into r206 as [PlacedPiece; 16u32];
    output r206 as [PlacedPiece; 16u32];


function move_common:
    input r0 as PlayerState.record;
    input r1 as field.private;
    input r2 as field.private;
    input r3 as field.private;
    gt r2 0field into r4;
    assert.eq r4 true;
    lt r2 8field into r5;
    assert.eq r5 true;
    is.eq self.caller r0.game.black into r6;
    gte r1 48field into r7;
    lt r1 56field into r8;
    and r7 r8 into r9;
    gte r1 8field into r10;
    lt r1 16field into r11;
    and r10 r11 into r12;
    ternary r6 r0.game.board.black[0u32].square r0.game.board.white[0u32].square into r13;
    ternary r6 r0.game.board.black[0u32].piece r0.game.board.white[0u32].piece into r14;
    cast r13 r14 into r15 as PlacedPiece;
    ternary r6 r0.game.board.black[1u32].square r0.game.board.white[1u32].square into r16;
    ternary r6 r0.game.board.black[1u32].piece r0.game.board.white[1u32].piece into r17;
    cast r16 r17 into r18 as PlacedPiece;
    ternary r6 r0.game.board.black[2u32].square r0.game.board.white[2u32].square into r19;
    ternary r6 r0.game.board.black[2u32].piece r0.game.board.white[2u32].piece into r20;
    cast r19 r20 into r21 as PlacedPiece;
    ternary r6 r0.game.board.black[3u32].square r0.game.board.white[3u32].square into r22;
    ternary r6 r0.game.board.black[3u32].piece r0.game.board.white[3u32].piece into r23;
    cast r22 r23 into r24 as PlacedPiece;
    ternary r6 r0.game.board.black[4u32].square r0.game.board.white[4u32].square into r25;
    ternary r6 r0.game.board.black[4u32].piece r0.game.board.white[4u32].piece into r26;
    cast r25 r26 into r27 as PlacedPiece;
    ternary r6 r0.game.board.black[5u32].square r0.game.board.white[5u32].square into r28;
    ternary r6 r0.game.board.black[5u32].piece r0.game.board.white[5u32].piece into r29;
    cast r28 r29 into r30 as PlacedPiece;
    ternary r6 r0.game.board.black[6u32].square r0.game.board.white[6u32].square into r31;
    ternary r6 r0.game.board.black[6u32].piece r0.game.board.white[6u32].piece into r32;
    cast r31 r32 into r33 as PlacedPiece;
    ternary r6 r0.game.board.black[7u32].square r0.game.board.white[7u32].square into r34;
    ternary r6 r0.game.board.black[7u32].piece r0.game.board.white[7u32].piece into r35;
    cast r34 r35 into r36 as PlacedPiece;
    ternary r6 r0.game.board.black[8u32].square r0.game.board.white[8u32].square into r37;
    ternary r6 r0.game.board.black[8u32].piece r0.game.board.white[8u32].piece into r38;
    cast r37 r38 into r39 as PlacedPiece;
    ternary r6 r0.game.board.black[9u32].square r0.game.board.white[9u32].square into r40;
    ternary r6 r0.game.board.black[9u32].piece r0.game.board.white[9u32].piece into r41;
    cast r40 r41 into r42 as PlacedPiece;
    ternary r6 r0.game.board.black[10u32].square r0.game.board.white[10u32].square into r43;
    ternary r6 r0.game.board.black[10u32].piece r0.game.board.white[10u32].piece into r44;
    cast r43 r44 into r45 as PlacedPiece;
    ternary r6 r0.game.board.black[11u32].square r0.game.board.white[11u32].square into r46;
    ternary r6 r0.game.board.black[11u32].piece r0.game.board.white[11u32].piece into r47;
    cast r46 r47 into r48 as PlacedPiece;
    ternary r6 r0.game.board.black[12u32].square r0.game.board.white[12u32].square into r49;
    ternary r6 r0.game.board.black[12u32].piece r0.game.board.white[12u32].piece into r50;
    cast r49 r50 into r51 as PlacedPiece;
    ternary r6 r0.game.board.black[13u32].square r0.game.board.white[13u32].square into r52;
    ternary r6 r0.game.board.black[13u32].piece r0.game.board.white[13u32].piece into r53;
    cast r52 r53 into r54 as PlacedPiece;
    ternary r6 r0.game.board.black[14u32].square r0.game.board.white[14u32].square into r55;
    ternary r6 r0.game.board.black[14u32].piece r0.game.board.white[14u32].piece into r56;
    cast r55 r56 into r57 as PlacedPiece;
    ternary r6 r0.game.board.black[15u32].square r0.game.board.white[15u32].square into r58;
    ternary r6 r0.game.board.black[15u32].piece r0.game.board.white[15u32].piece into r59;
    cast r58 r59 into r60 as PlacedPiece;
    cast  r15 r18 r21 r24 r27 r30 r33 r36 r39 r42 r45 r48 r51 r54 r57 r60 into r61 as [PlacedPiece; 16u32];
    ternary r6 r0.game.board.white[0u32].square r0.game.board.black[0u32].square into r62;
    ternary r6 r0.game.board.white[0u32].piece r0.game.board.black[0u32].piece into r63;
    cast r62 r63 into r64 as PlacedPiece;
    ternary r6 r0.game.board.white[1u32].square r0.game.board.black[1u32].square into r65;
    ternary r6 r0.game.board.white[1u32].piece r0.game.board.black[1u32].piece into r66;
    cast r65 r66 into r67 as PlacedPiece;
    ternary r6 r0.game.board.white[2u32].square r0.game.board.black[2u32].square into r68;
    ternary r6 r0.game.board.white[2u32].piece r0.game.board.black[2u32].piece into r69;
    cast r68 r69 into r70 as PlacedPiece;
    ternary r6 r0.game.board.white[3u32].square r0.game.board.black[3u32].square into r71;
    ternary r6 r0.game.board.white[3u32].piece r0.game.board.black[3u32].piece into r72;
    cast r71 r72 into r73 as PlacedPiece;
    ternary r6 r0.game.board.white[4u32].square r0.game.board.black[4u32].square into r74;
    ternary r6 r0.game.board.white[4u32].piece r0.game.board.black[4u32].piece into r75;
    cast r74 r75 into r76 as PlacedPiece;
    ternary r6 r0.game.board.white[5u32].square r0.game.board.black[5u32].square into r77;
    ternary r6 r0.game.board.white[5u32].piece r0.game.board.black[5u32].piece into r78;
    cast r77 r78 into r79 as PlacedPiece;
    ternary r6 r0.game.board.white[6u32].square r0.game.board.black[6u32].square into r80;
    ternary r6 r0.game.board.white[6u32].piece r0.game.board.black[6u32].piece into r81;
    cast r80 r81 into r82 as PlacedPiece;
    ternary r6 r0.game.board.white[7u32].square r0.game.board.black[7u32].square into r83;
    ternary r6 r0.game.board.white[7u32].piece r0.game.board.black[7u32].piece into r84;
    cast r83 r84 into r85 as PlacedPiece;
    ternary r6 r0.game.board.white[8u32].square r0.game.board.black[8u32].square into r86;
    ternary r6 r0.game.board.white[8u32].piece r0.game.board.black[8u32].piece into r87;
    cast r86 r87 into r88 as PlacedPiece;
    ternary r6 r0.game.board.white[9u32].square r0.game.board.black[9u32].square into r89;
    ternary r6 r0.game.board.white[9u32].piece r0.game.board.black[9u32].piece into r90;
    cast r89 r90 into r91 as PlacedPiece;
    ternary r6 r0.game.board.white[10u32].square r0.game.board.black[10u32].square into r92;
    ternary r6 r0.game.board.white[10u32].piece r0.game.board.black[10u32].piece into r93;
    cast r92 r93 into r94 as PlacedPiece;
    ternary r6 r0.game.board.white[11u32].square r0.game.board.black[11u32].square into r95;
    ternary r6 r0.game.board.white[11u32].piece r0.game.board.black[11u32].piece into r96;
    cast r95 r96 into r97 as PlacedPiece;
    ternary r6 r0.game.board.white[12u32].square r0.game.board.black[12u32].square into r98;
    ternary r6 r0.game.board.white[12u32].piece r0.game.board.black[12u32].piece into r99;
    cast r98 r99 into r100 as PlacedPiece;
    ternary r6 r0.game.board.white[13u32].square r0.game.board.black[13u32].square into r101;
    ternary r6 r0.game.board.white[13u32].piece r0.game.board.black[13u32].piece into r102;
    cast r101 r102 into r103 as PlacedPiece;
    ternary r6 r0.game.board.white[14u32].square r0.game.board.black[14u32].square into r104;
    ternary r6 r0.game.board.white[14u32].piece r0.game.board.black[14u32].piece into r105;
    cast r104 r105 into r106 as PlacedPiece;
    ternary r6 r0.game.board.white[15u32].square r0.game.board.black[15u32].square into r107;
    ternary r6 r0.game.board.white[15u32].piece r0.game.board.black[15u32].piece into r108;
    cast r107 r108 into r109 as PlacedPiece;
    cast  r64 r67 r70 r73 r76 r79 r82 r85 r88 r91 r94 r97 r100 r103 r106 r109 into r110 as [PlacedPiece; 16u32];
    call access r61 r1 into r111;
    is.eq r111 1field into r112;
    is.eq r111 2field into r113;
    or r112 r113 into r114;
    is.eq r111 4field into r115;
    or r114 r115 into r116;
    is.eq r111 5field into r117;
    or r116 r117 into r118;
    is.eq r111 6field into r119;
    or r118 r119 into r120;
    assert.eq r120 true;
    is.eq r111 6field into r121;
    not r121 into r122;
    is.eq r2 1field into r123;
    or r122 r123 into r124;
    assert.eq r124 true;
    is.eq r111 1field into r125;
    is.eq r3 4field into r126;
    lte r2 2field into r127;
    and r125 r6 into r128;
    and r128 r126 into r129;
    not r129 into r130;
    or r130 r127 into r131;
    assert.eq r131 true;
    is.eq r2 2field into r132;
    and r125 r6 into r133;
    and r133 r126 into r134;
    and r134 r132 into r135;
    not r135 into r136;
    or r136 r9 into r137;
    assert.eq r137 true;
    and r125 r6 into r138;
    not r126 into r139;
    and r138 r139 into r140;
    not r140 into r141;
    is.eq r2 1field into r142;
    or r141 r142 into r143;
    assert.eq r143 true;
    is.eq r3 3field into r144;
    is.eq r3 5field into r145;
    or r144 r145 into r146;
    and r125 r6 into r147;
    not r126 into r148;
    and r147 r148 into r149;
    not r149 into r150;
    or r150 r146 into r151;
    assert.eq r151 true;
    ternary r126 false true into r152;
    is.eq r3 0field into r153;
    lte r2 2field into r154;
    not r6 into r155;
    and r125 r155 into r156;
    and r156 r153 into r157;
    not r157 into r158;
    or r158 r154 into r159;
    assert.eq r159 true;
    is.eq r2 2field into r160;
    not r6 into r161;
    and r125 r161 into r162;
    and r162 r153 into r163;
    and r163 r160 into r164;
    not r164 into r165;
    or r165 r12 into r166;
    assert.eq r166 true;
    not r6 into r167;
    and r125 r167 into r168;
    not r153 into r169;
    and r168 r169 into r170;
    not r170 into r171;
    is.eq r2 1field into r172;
    or r171 r172 into r173;
    assert.eq r173 true;
    is.eq r3 1field into r174;
    is.eq r3 7field into r175;
    or r174 r175 into r176;
    not r6 into r177;
    and r125 r177 into r178;
    not r153 into r179;
    and r178 r179 into r180;
    not r180 into r181;
    or r181 r176 into r182;
    assert.eq r182 true;
    ternary r153 false true into r183;
    ternary r6 r152 r183 into r184;
    ternary r125 r184 true into r185;
    is.eq r3 0field into r186;
    is.eq r3 2field into r187;
    or r186 r187 into r188;
    is.eq r3 4field into r189;
    or r188 r189 into r190;
    is.eq r3 6field into r191;
    or r190 r191 into r192;
    not r192 into r193;
    is.neq r111 4field into r194;
    or r193 r194 into r195;
    assert.eq r195 true;
    not r192 into r196;
    not r196 into r197;
    is.neq r111 2field into r198;
    or r197 r198 into r199;
    assert.eq r199 true;
    gt r2 0field into r200;
    call go_dir r1 r3 into r201;
    lt r201 64field into r202;
    not r200 into r203;
    or r203 r202 into r204;
    assert.eq r204 true;
    call access r61 r201 into r205;
    not r200 into r206;
    is.eq r205 0field into r207;
    or r206 r207 into r208;
    assert.eq r208 true;
    gt r2 1field into r209;
    not r185 into r210;
    or r209 r210 into r211;
    call access r110 r201 into r212;
    and r200 r211 into r213;
    not r213 into r214;
    is.eq r212 0field into r215;
    or r214 r215 into r216;
    assert.eq r216 true;
    sub r2 1field into r217;
    ternary r200 r201 r1 into r218;
    ternary r200 r217 r2 into r219;
    gt r219 0field into r220;
    call go_dir r218 r3 into r221;
    lt r221 64field into r222;
    not r220 into r223;
    or r223 r222 into r224;
    assert.eq r224 true;
    call access r61 r221 into r225;
    not r220 into r226;
    is.eq r225 0field into r227;
    or r226 r227 into r228;
    assert.eq r228 true;
    gt r219 1field into r229;
    not r185 into r230;
    or r229 r230 into r231;
    call access r110 r221 into r232;
    and r220 r231 into r233;
    not r233 into r234;
    is.eq r232 0field into r235;
    or r234 r235 into r236;
    assert.eq r236 true;
    sub r219 1field into r237;
    ternary r220 r221 r218 into r238;
    ternary r220 r237 r219 into r239;
    gt r239 0field into r240;
    call go_dir r238 r3 into r241;
    lt r241 64field into r242;
    not r240 into r243;
    or r243 r242 into r244;
    assert.eq r244 true;
    call access r61 r241 into r245;
    not r240 into r246;
    is.eq r245 0field into r247;
    or r246 r247 into r248;
    assert.eq r248 true;
    gt r239 1field into r249;
    not r185 into r250;
    or r249 r250 into r251;
    call access r110 r241 into r252;
    and r240 r251 into r253;
    not r253 into r254;
    is.eq r252 0field into r255;
    or r254 r255 into r256;
    assert.eq r256 true;
    sub r239 1field into r257;
    ternary r240 r241 r238 into r258;
    ternary r240 r257 r239 into r259;
    gt r259 0field into r260;
    call go_dir r258 r3 into r261;
    lt r261 64field into r262;
    not r260 into r263;
    or r263 r262 into r264;
    assert.eq r264 true;
    call access r61 r261 into r265;
    not r260 into r266;
    is.eq r265 0field into r267;
    or r266 r267 into r268;
    assert.eq r268 true;
    gt r259 1field into r269;
    not r185 into r270;
    or r269 r270 into r271;
    call access r110 r261 into r272;
    and r260 r271 into r273;
    not r273 into r274;
    is.eq r272 0field into r275;
    or r274 r275 into r276;
    assert.eq r276 true;
    sub r259 1field into r277;
    ternary r260 r261 r258 into r278;
    ternary r260 r277 r259 into r279;
    gt r279 0field into r280;
    call go_dir r278 r3 into r281;
    lt r281 64field into r282;
    not r280 into r283;
    or r283 r282 into r284;
    assert.eq r284 true;
    call access r61 r281 into r285;
    not r280 into r286;
    is.eq r285 0field into r287;
    or r286 r287 into r288;
    assert.eq r288 true;
    gt r279 1field into r289;
    not r185 into r290;
    or r289 r290 into r291;
    call access r110 r281 into r292;
    and r280 r291 into r293;
    not r293 into r294;
    is.eq r292 0field into r295;
    or r294 r295 into r296;
    assert.eq r296 true;
    sub r279 1field into r297;
    ternary r280 r281 r278 into r298;
    ternary r280 r297 r279 into r299;
    gt r299 0field into r300;
    call go_dir r298 r3 into r301;
    lt r301 64field into r302;
    not r300 into r303;
    or r303 r302 into r304;
    assert.eq r304 true;
    call access r61 r301 into r305;
    not r300 into r306;
    is.eq r305 0field into r307;
    or r306 r307 into r308;
    assert.eq r308 true;
    gt r299 1field into r309;
    not r185 into r310;
    or r309 r310 into r311;
    call access r110 r301 into r312;
    and r300 r311 into r313;
    not r313 into r314;
    is.eq r312 0field into r315;
    or r314 r315 into r316;
    assert.eq r316 true;
    sub r299 1field into r317;
    ternary r300 r301 r298 into r318;
    ternary r300 r317 r299 into r319;
    gt r319 0field into r320;
    call go_dir r318 r3 into r321;
    lt r321 64field into r322;
    not r320 into r323;
    or r323 r322 into r324;
    assert.eq r324 true;
    call access r61 r321 into r325;
    not r320 into r326;
    is.eq r325 0field into r327;
    or r326 r327 into r328;
    assert.eq r328 true;
    gt r319 1field into r329;
    not r185 into r330;
    or r329 r330 into r331;
    call access r110 r321 into r332;
    and r320 r331 into r333;
    not r333 into r334;
    is.eq r332 0field into r335;
    or r334 r335 into r336;
    assert.eq r336 true;
    sub r319 1field into r337;
    ternary r320 r321 r318 into r338;
    ternary r320 r337 r319 into r339;
    gt r339 0field into r340;
    call go_dir r338 r3 into r341;
    lt r341 64field into r342;
    not r340 into r343;
    or r343 r342 into r344;
    assert.eq r344 true;
    call access r61 r341 into r345;
    not r340 into r346;
    is.eq r345 0field into r347;
    or r346 r347 into r348;
    assert.eq r348 true;
    gt r339 1field into r349;
    not r185 into r350;
    or r349 r350 into r351;
    call access r110 r341 into r352;
    and r340 r351 into r353;
    not r353 into r354;
    is.eq r352 0field into r355;
    or r354 r355 into r356;
    assert.eq r356 true;
    sub r339 1field into r357;
    ternary r340 r341 r338 into r358;
    ternary r340 r357 r339 into r359;
    call do_move r61 r1 r358 into r360;
    call do_move r110 r358 64field into r361;
    ternary r6 r360[0u32].square r361[0u32].square into r362;
    ternary r6 r360[0u32].piece r361[0u32].piece into r363;
    cast r362 r363 into r364 as PlacedPiece;
    ternary r6 r360[1u32].square r361[1u32].square into r365;
    ternary r6 r360[1u32].piece r361[1u32].piece into r366;
    cast r365 r366 into r367 as PlacedPiece;
    ternary r6 r360[2u32].square r361[2u32].square into r368;
    ternary r6 r360[2u32].piece r361[2u32].piece into r369;
    cast r368 r369 into r370 as PlacedPiece;
    ternary r6 r360[3u32].square r361[3u32].square into r371;
    ternary r6 r360[3u32].piece r361[3u32].piece into r372;
    cast r371 r372 into r373 as PlacedPiece;
    ternary r6 r360[4u32].square r361[4u32].square into r374;
    ternary r6 r360[4u32].piece r361[4u32].piece into r375;
    cast r374 r375 into r376 as PlacedPiece;
    ternary r6 r360[5u32].square r361[5u32].square into r377;
    ternary r6 r360[5u32].piece r361[5u32].piece into r378;
    cast r377 r378 into r379 as PlacedPiece;
    ternary r6 r360[6u32].square r361[6u32].square into r380;
    ternary r6 r360[6u32].piece r361[6u32].piece into r381;
    cast r380 r381 into r382 as PlacedPiece;
    ternary r6 r360[7u32].square r361[7u32].square into r383;
    ternary r6 r360[7u32].piece r361[7u32].piece into r384;
    cast r383 r384 into r385 as PlacedPiece;
    ternary r6 r360[8u32].square r361[8u32].square into r386;
    ternary r6 r360[8u32].piece r361[8u32].piece into r387;
    cast r386 r387 into r388 as PlacedPiece;
    ternary r6 r360[9u32].square r361[9u32].square into r389;
    ternary r6 r360[9u32].piece r361[9u32].piece into r390;
    cast r389 r390 into r391 as PlacedPiece;
    ternary r6 r360[10u32].square r361[10u32].square into r392;
    ternary r6 r360[10u32].piece r361[10u32].piece into r393;
    cast r392 r393 into r394 as PlacedPiece;
    ternary r6 r360[11u32].square r361[11u32].square into r395;
    ternary r6 r360[11u32].piece r361[11u32].piece into r396;
    cast r395 r396 into r397 as PlacedPiece;
    ternary r6 r360[12u32].square r361[12u32].square into r398;
    ternary r6 r360[12u32].piece r361[12u32].piece into r399;
    cast r398 r399 into r400 as PlacedPiece;
    ternary r6 r360[13u32].square r361[13u32].square into r401;
    ternary r6 r360[13u32].piece r361[13u32].piece into r402;
    cast r401 r402 into r403 as PlacedPiece;
    ternary r6 r360[14u32].square r361[14u32].square into r404;
    ternary r6 r360[14u32].piece r361[14u32].piece into r405;
    cast r404 r405 into r406 as PlacedPiece;
    ternary r6 r360[15u32].square r361[15u32].square into r407;
    ternary r6 r360[15u32].piece r361[15u32].piece into r408;
    cast r407 r408 into r409 as PlacedPiece;
    cast  r364 r367 r370 r373 r376 r379 r382 r385 r388 r391 r394 r397 r400 r403 r406 r409 into r410 as [PlacedPiece; 16u32];
    ternary r6 r361[0u32].square r360[0u32].square into r411;
    ternary r6 r361[0u32].piece r360[0u32].piece into r412;
    cast r411 r412 into r413 as PlacedPiece;
    ternary r6 r361[1u32].square r360[1u32].square into r414;
    ternary r6 r361[1u32].piece r360[1u32].piece into r415;
    cast r414 r415 into r416 as PlacedPiece;
    ternary r6 r361[2u32].square r360[2u32].square into r417;
    ternary r6 r361[2u32].piece r360[2u32].piece into r418;
    cast r417 r418 into r419 as PlacedPiece;
    ternary r6 r361[3u32].square r360[3u32].square into r420;
    ternary r6 r361[3u32].piece r360[3u32].piece into r421;
    cast r420 r421 into r422 as PlacedPiece;
    ternary r6 r361[4u32].square r360[4u32].square into r423;
    ternary r6 r361[4u32].piece r360[4u32].piece into r424;
    cast r423 r424 into r425 as PlacedPiece;
    ternary r6 r361[5u32].square r360[5u32].square into r426;
    ternary r6 r361[5u32].piece r360[5u32].piece into r427;
    cast r426 r427 into r428 as PlacedPiece;
    ternary r6 r361[6u32].square r360[6u32].square into r429;
    ternary r6 r361[6u32].piece r360[6u32].piece into r430;
    cast r429 r430 into r431 as PlacedPiece;
    ternary r6 r361[7u32].square r360[7u32].square into r432;
    ternary r6 r361[7u32].piece r360[7u32].piece into r433;
    cast r432 r433 into r434 as PlacedPiece;
    ternary r6 r361[8u32].square r360[8u32].square into r435;
    ternary r6 r361[8u32].piece r360[8u32].piece into r436;
    cast r435 r436 into r437 as PlacedPiece;
    ternary r6 r361[9u32].square r360[9u32].square into r438;
    ternary r6 r361[9u32].piece r360[9u32].piece into r439;
    cast r438 r439 into r440 as PlacedPiece;
    ternary r6 r361[10u32].square r360[10u32].square into r441;
    ternary r6 r361[10u32].piece r360[10u32].piece into r442;
    cast r441 r442 into r443 as PlacedPiece;
    ternary r6 r361[11u32].square r360[11u32].square into r444;
    ternary r6 r361[11u32].piece r360[11u32].piece into r445;
    cast r444 r445 into r446 as PlacedPiece;
    ternary r6 r361[12u32].square r360[12u32].square into r447;
    ternary r6 r361[12u32].piece r360[12u32].piece into r448;
    cast r447 r448 into r449 as PlacedPiece;
    ternary r6 r361[13u32].square r360[13u32].square into r450;
    ternary r6 r361[13u32].piece r360[13u32].piece into r451;
    cast r450 r451 into r452 as PlacedPiece;
    ternary r6 r361[14u32].square r360[14u32].square into r453;
    ternary r6 r361[14u32].piece r360[14u32].piece into r454;
    cast r453 r454 into r455 as PlacedPiece;
    ternary r6 r361[15u32].square r360[15u32].square into r456;
    ternary r6 r361[15u32].piece r360[15u32].piece into r457;
    cast r456 r457 into r458 as PlacedPiece;
    cast  r413 r416 r419 r422 r425 r428 r431 r434 r437 r440 r443 r446 r449 r452 r455 r458 into r459 as [PlacedPiece; 16u32];
    add r0.game.board.ply 1field into r460;
    not r0.game.board.odd_ply into r461;
    cast r459 r410 r460 r461 into r462 as Board;
    cast r0.game.white r0.game.black r462 0field into r463 as Game;
    is.eq r0.bomb r1 into r464;
    ternary r464 r358 r0.bomb into r465;
    cast self.caller r463 r465 into r466 as PlayerState.record;
    ternary r6 r0.game.white self.caller into r467;
    cast r467 r463 into r468 as GameToken.record;
    output r466 as PlayerState.record;
    output r468 as GameToken.record;


function move_knight:
    input r0 as PlayerState.record;
    input r1 as field.private;
    input r2 as field.private;
    is.eq r0.owner r0.game.black into r3;
    assert.eq r3 r0.game.board.odd_ply;
    ternary r3 r0.game.board.black[0u32].square r0.game.board.white[0u32].square into r4;
    ternary r3 r0.game.board.black[0u32].piece r0.game.board.white[0u32].piece into r5;
    cast r4 r5 into r6 as PlacedPiece;
    ternary r3 r0.game.board.black[1u32].square r0.game.board.white[1u32].square into r7;
    ternary r3 r0.game.board.black[1u32].piece r0.game.board.white[1u32].piece into r8;
    cast r7 r8 into r9 as PlacedPiece;
    ternary r3 r0.game.board.black[2u32].square r0.game.board.white[2u32].square into r10;
    ternary r3 r0.game.board.black[2u32].piece r0.game.board.white[2u32].piece into r11;
    cast r10 r11 into r12 as PlacedPiece;
    ternary r3 r0.game.board.black[3u32].square r0.game.board.white[3u32].square into r13;
    ternary r3 r0.game.board.black[3u32].piece r0.game.board.white[3u32].piece into r14;
    cast r13 r14 into r15 as PlacedPiece;
    ternary r3 r0.game.board.black[4u32].square r0.game.board.white[4u32].square into r16;
    ternary r3 r0.game.board.black[4u32].piece r0.game.board.white[4u32].piece into r17;
    cast r16 r17 into r18 as PlacedPiece;
    ternary r3 r0.game.board.black[5u32].square r0.game.board.white[5u32].square into r19;
    ternary r3 r0.game.board.black[5u32].piece r0.game.board.white[5u32].piece into r20;
    cast r19 r20 into r21 as PlacedPiece;
    ternary r3 r0.game.board.black[6u32].square r0.game.board.white[6u32].square into r22;
    ternary r3 r0.game.board.black[6u32].piece r0.game.board.white[6u32].piece into r23;
    cast r22 r23 into r24 as PlacedPiece;
    ternary r3 r0.game.board.black[7u32].square r0.game.board.white[7u32].square into r25;
    ternary r3 r0.game.board.black[7u32].piece r0.game.board.white[7u32].piece into r26;
    cast r25 r26 into r27 as PlacedPiece;
    ternary r3 r0.game.board.black[8u32].square r0.game.board.white[8u32].square into r28;
    ternary r3 r0.game.board.black[8u32].piece r0.game.board.white[8u32].piece into r29;
    cast r28 r29 into r30 as PlacedPiece;
    ternary r3 r0.game.board.black[9u32].square r0.game.board.white[9u32].square into r31;
    ternary r3 r0.game.board.black[9u32].piece r0.game.board.white[9u32].piece into r32;
    cast r31 r32 into r33 as PlacedPiece;
    ternary r3 r0.game.board.black[10u32].square r0.game.board.white[10u32].square into r34;
    ternary r3 r0.game.board.black[10u32].piece r0.game.board.white[10u32].piece into r35;
    cast r34 r35 into r36 as PlacedPiece;
    ternary r3 r0.game.board.black[11u32].square r0.game.board.white[11u32].square into r37;
    ternary r3 r0.game.board.black[11u32].piece r0.game.board.white[11u32].piece into r38;
    cast r37 r38 into r39 as PlacedPiece;
    ternary r3 r0.game.board.black[12u32].square r0.game.board.white[12u32].square into r40;
    ternary r3 r0.game.board.black[12u32].piece r0.game.board.white[12u32].piece into r41;
    cast r40 r41 into r42 as PlacedPiece;
    ternary r3 r0.game.board.black[13u32].square r0.game.board.white[13u32].square into r43;
    ternary r3 r0.game.board.black[13u32].piece r0.game.board.white[13u32].piece into r44;
    cast r43 r44 into r45 as PlacedPiece;
    ternary r3 r0.game.board.black[14u32].square r0.game.board.white[14u32].square into r46;
    ternary r3 r0.game.board.black[14u32].piece r0.game.board.white[14u32].piece into r47;
    cast r46 r47 into r48 as PlacedPiece;
    ternary r3 r0.game.board.black[15u32].square r0.game.board.white[15u32].square into r49;
    ternary r3 r0.game.board.black[15u32].piece r0.game.board.white[15u32].piece into r50;
    cast r49 r50 into r51 as PlacedPiece;
    cast  r6 r9 r12 r15 r18 r21 r24 r27 r30 r33 r36 r39 r42 r45 r48 r51 into r52 as [PlacedPiece; 16u32];
    ternary r3 r0.game.board.white[0u32].square r0.game.board.black[0u32].square into r53;
    ternary r3 r0.game.board.white[0u32].piece r0.game.board.black[0u32].piece into r54;
    cast r53 r54 into r55 as PlacedPiece;
    ternary r3 r0.game.board.white[1u32].square r0.game.board.black[1u32].square into r56;
    ternary r3 r0.game.board.white[1u32].piece r0.game.board.black[1u32].piece into r57;
    cast r56 r57 into r58 as PlacedPiece;
    ternary r3 r0.game.board.white[2u32].square r0.game.board.black[2u32].square into r59;
    ternary r3 r0.game.board.white[2u32].piece r0.game.board.black[2u32].piece into r60;
    cast r59 r60 into r61 as PlacedPiece;
    ternary r3 r0.game.board.white[3u32].square r0.game.board.black[3u32].square into r62;
    ternary r3 r0.game.board.white[3u32].piece r0.game.board.black[3u32].piece into r63;
    cast r62 r63 into r64 as PlacedPiece;
    ternary r3 r0.game.board.white[4u32].square r0.game.board.black[4u32].square into r65;
    ternary r3 r0.game.board.white[4u32].piece r0.game.board.black[4u32].piece into r66;
    cast r65 r66 into r67 as PlacedPiece;
    ternary r3 r0.game.board.white[5u32].square r0.game.board.black[5u32].square into r68;
    ternary r3 r0.game.board.white[5u32].piece r0.game.board.black[5u32].piece into r69;
    cast r68 r69 into r70 as PlacedPiece;
    ternary r3 r0.game.board.white[6u32].square r0.game.board.black[6u32].square into r71;
    ternary r3 r0.game.board.white[6u32].piece r0.game.board.black[6u32].piece into r72;
    cast r71 r72 into r73 as PlacedPiece;
    ternary r3 r0.game.board.white[7u32].square r0.game.board.black[7u32].square into r74;
    ternary r3 r0.game.board.white[7u32].piece r0.game.board.black[7u32].piece into r75;
    cast r74 r75 into r76 as PlacedPiece;
    ternary r3 r0.game.board.white[8u32].square r0.game.board.black[8u32].square into r77;
    ternary r3 r0.game.board.white[8u32].piece r0.game.board.black[8u32].piece into r78;
    cast r77 r78 into r79 as PlacedPiece;
    ternary r3 r0.game.board.white[9u32].square r0.game.board.black[9u32].square into r80;
    ternary r3 r0.game.board.white[9u32].piece r0.game.board.black[9u32].piece into r81;
    cast r80 r81 into r82 as PlacedPiece;
    ternary r3 r0.game.board.white[10u32].square r0.game.board.black[10u32].square into r83;
    ternary r3 r0.game.board.white[10u32].piece r0.game.board.black[10u32].piece into r84;
    cast r83 r84 into r85 as PlacedPiece;
    ternary r3 r0.game.board.white[11u32].square r0.game.board.black[11u32].square into r86;
    ternary r3 r0.game.board.white[11u32].piece r0.game.board.black[11u32].piece into r87;
    cast r86 r87 into r88 as PlacedPiece;
    ternary r3 r0.game.board.white[12u32].square r0.game.board.black[12u32].square into r89;
    ternary r3 r0.game.board.white[12u32].piece r0.game.board.black[12u32].piece into r90;
    cast r89 r90 into r91 as PlacedPiece;
    ternary r3 r0.game.board.white[13u32].square r0.game.board.black[13u32].square into r92;
    ternary r3 r0.game.board.white[13u32].piece r0.game.board.black[13u32].piece into r93;
    cast r92 r93 into r94 as PlacedPiece;
    ternary r3 r0.game.board.white[14u32].square r0.game.board.black[14u32].square into r95;
    ternary r3 r0.game.board.white[14u32].piece r0.game.board.black[14u32].piece into r96;
    cast r95 r96 into r97 as PlacedPiece;
    ternary r3 r0.game.board.white[15u32].square r0.game.board.black[15u32].square into r98;
    ternary r3 r0.game.board.white[15u32].piece r0.game.board.black[15u32].piece into r99;
    cast r98 r99 into r100 as PlacedPiece;
    cast  r55 r58 r61 r64 r67 r70 r73 r76 r79 r82 r85 r88 r91 r94 r97 r100 into r101 as [PlacedPiece; 16u32];
    call access r52 r1 into r102;
    assert.eq r102 3field;
    call go_dir r1 0field into r103;
    call go_dir r103 0field into r104;
    call go_dir r103 6field into r105;
    call go_dir r103 2field into r106;
    call go_dir r1 4field into r107;
    call go_dir r107 4field into r108;
    call go_dir r107 6field into r109;
    call go_dir r107 2field into r110;
    call go_dir r104 6field into r111;
    call go_dir r105 6field into r112;
    call go_dir r104 2field into r113;
    call go_dir r106 2field into r114;
    call go_dir r108 6field into r115;
    call go_dir r109 6field into r116;
    call go_dir r108 2field into r117;
    call go_dir r110 2field into r118;
    is.eq r2 0field into r119;
    is.eq r2 1field into r120;
    is.eq r2 2field into r121;
    is.eq r2 3field into r122;
    is.eq r2 7field into r123;
    is.eq r2 6field into r124;
    is.eq r2 5field into r125;
    is.eq r2 4field into r126;
    ternary r126 r113 64field into r127;
    ternary r125 r114 r127 into r128;
    ternary r124 r118 r128 into r129;
    ternary r123 r117 r129 into r130;
    ternary r122 r115 r130 into r131;
    ternary r121 r116 r131 into r132;
    ternary r120 r112 r132 into r133;
    ternary r119 r111 r133 into r134;
    assert.neq r134 64field;
    call access r52 r134 into r135;
    assert.eq r135 0field;
    call do_move r52 r1 r134 into r136;
    call do_move r52 r134 64field into r137;
    ternary r3 r136[0u32].square r137[0u32].square into r138;
    ternary r3 r136[0u32].piece r137[0u32].piece into r139;
    cast r138 r139 into r140 as PlacedPiece;
    ternary r3 r136[1u32].square r137[1u32].square into r141;
    ternary r3 r136[1u32].piece r137[1u32].piece into r142;
    cast r141 r142 into r143 as PlacedPiece;
    ternary r3 r136[2u32].square r137[2u32].square into r144;
    ternary r3 r136[2u32].piece r137[2u32].piece into r145;
    cast r144 r145 into r146 as PlacedPiece;
    ternary r3 r136[3u32].square r137[3u32].square into r147;
    ternary r3 r136[3u32].piece r137[3u32].piece into r148;
    cast r147 r148 into r149 as PlacedPiece;
    ternary r3 r136[4u32].square r137[4u32].square into r150;
    ternary r3 r136[4u32].piece r137[4u32].piece into r151;
    cast r150 r151 into r152 as PlacedPiece;
    ternary r3 r136[5u32].square r137[5u32].square into r153;
    ternary r3 r136[5u32].piece r137[5u32].piece into r154;
    cast r153 r154 into r155 as PlacedPiece;
    ternary r3 r136[6u32].square r137[6u32].square into r156;
    ternary r3 r136[6u32].piece r137[6u32].piece into r157;
    cast r156 r157 into r158 as PlacedPiece;
    ternary r3 r136[7u32].square r137[7u32].square into r159;
    ternary r3 r136[7u32].piece r137[7u32].piece into r160;
    cast r159 r160 into r161 as PlacedPiece;
    ternary r3 r136[8u32].square r137[8u32].square into r162;
    ternary r3 r136[8u32].piece r137[8u32].piece into r163;
    cast r162 r163 into r164 as PlacedPiece;
    ternary r3 r136[9u32].square r137[9u32].square into r165;
    ternary r3 r136[9u32].piece r137[9u32].piece into r166;
    cast r165 r166 into r167 as PlacedPiece;
    ternary r3 r136[10u32].square r137[10u32].square into r168;
    ternary r3 r136[10u32].piece r137[10u32].piece into r169;
    cast r168 r169 into r170 as PlacedPiece;
    ternary r3 r136[11u32].square r137[11u32].square into r171;
    ternary r3 r136[11u32].piece r137[11u32].piece into r172;
    cast r171 r172 into r173 as PlacedPiece;
    ternary r3 r136[12u32].square r137[12u32].square into r174;
    ternary r3 r136[12u32].piece r137[12u32].piece into r175;
    cast r174 r175 into r176 as PlacedPiece;
    ternary r3 r136[13u32].square r137[13u32].square into r177;
    ternary r3 r136[13u32].piece r137[13u32].piece into r178;
    cast r177 r178 into r179 as PlacedPiece;
    ternary r3 r136[14u32].square r137[14u32].square into r180;
    ternary r3 r136[14u32].piece r137[14u32].piece into r181;
    cast r180 r181 into r182 as PlacedPiece;
    ternary r3 r136[15u32].square r137[15u32].square into r183;
    ternary r3 r136[15u32].piece r137[15u32].piece into r184;
    cast r183 r184 into r185 as PlacedPiece;
    cast  r140 r143 r146 r149 r152 r155 r158 r161 r164 r167 r170 r173 r176 r179 r182 r185 into r186 as [PlacedPiece; 16u32];
    ternary r3 r137[0u32].square r136[0u32].square into r187;
    ternary r3 r137[0u32].piece r136[0u32].piece into r188;
    cast r187 r188 into r189 as PlacedPiece;
    ternary r3 r137[1u32].square r136[1u32].square into r190;
    ternary r3 r137[1u32].piece r136[1u32].piece into r191;
    cast r190 r191 into r192 as PlacedPiece;
    ternary r3 r137[2u32].square r136[2u32].square into r193;
    ternary r3 r137[2u32].piece r136[2u32].piece into r194;
    cast r193 r194 into r195 as PlacedPiece;
    ternary r3 r137[3u32].square r136[3u32].square into r196;
    ternary r3 r137[3u32].piece r136[3u32].piece into r197;
    cast r196 r197 into r198 as PlacedPiece;
    ternary r3 r137[4u32].square r136[4u32].square into r199;
    ternary r3 r137[4u32].piece r136[4u32].piece into r200;
    cast r199 r200 into r201 as PlacedPiece;
    ternary r3 r137[5u32].square r136[5u32].square into r202;
    ternary r3 r137[5u32].piece r136[5u32].piece into r203;
    cast r202 r203 into r204 as PlacedPiece;
    ternary r3 r137[6u32].square r136[6u32].square into r205;
    ternary r3 r137[6u32].piece r136[6u32].piece into r206;
    cast r205 r206 into r207 as PlacedPiece;
    ternary r3 r137[7u32].square r136[7u32].square into r208;
    ternary r3 r137[7u32].piece r136[7u32].piece into r209;
    cast r208 r209 into r210 as PlacedPiece;
    ternary r3 r137[8u32].square r136[8u32].square into r211;
    ternary r3 r137[8u32].piece r136[8u32].piece into r212;
    cast r211 r212 into r213 as PlacedPiece;
    ternary r3 r137[9u32].square r136[9u32].square into r214;
    ternary r3 r137[9u32].piece r136[9u32].piece into r215;
    cast r214 r215 into r216 as PlacedPiece;
    ternary r3 r137[10u32].square r136[10u32].square into r217;
    ternary r3 r137[10u32].piece r136[10u32].piece into r218;
    cast r217 r218 into r219 as PlacedPiece;
    ternary r3 r137[11u32].square r136[11u32].square into r220;
    ternary r3 r137[11u32].piece r136[11u32].piece into r221;
    cast r220 r221 into r222 as PlacedPiece;
    ternary r3 r137[12u32].square r136[12u32].square into r223;
    ternary r3 r137[12u32].piece r136[12u32].piece into r224;
    cast r223 r224 into r225 as PlacedPiece;
    ternary r3 r137[13u32].square r136[13u32].square into r226;
    ternary r3 r137[13u32].piece r136[13u32].piece into r227;
    cast r226 r227 into r228 as PlacedPiece;
    ternary r3 r137[14u32].square r136[14u32].square into r229;
    ternary r3 r137[14u32].piece r136[14u32].piece into r230;
    cast r229 r230 into r231 as PlacedPiece;
    ternary r3 r137[15u32].square r136[15u32].square into r232;
    ternary r3 r137[15u32].piece r136[15u32].piece into r233;
    cast r232 r233 into r234 as PlacedPiece;
    cast  r189 r192 r195 r198 r201 r204 r207 r210 r213 r216 r219 r222 r225 r228 r231 r234 into r235 as [PlacedPiece; 16u32];
    add r0.game.board.ply 1field into r236;
    not r0.game.board.odd_ply into r237;
    cast r235 r186 r236 r237 into r238 as Board;
    cast r0.game.white r0.game.black r238 0field into r239 as Game;
    is.eq r0.bomb r1 into r240;
    ternary r240 r134 r0.bomb into r241;
    cast self.caller r239 r241 into r242 as PlayerState.record;
    ternary r3 r0.game.white self.caller into r243;
    cast r243 r239 into r244 as GameToken.record;
    output r242 as PlayerState.record;
    output r244 as GameToken.record;


function move_destroy:
    input r0 as PlayerState.record;
    input r1 as field.private;
    is.eq r0.owner r0.game.black into r2;
    assert.eq r2 r0.game.board.odd_ply;
    call access r0.game.board.white r1 into r3;
    call access r0.game.board.black r1 into r4;
    not r2 into r5;
    is.neq r4 0field into r6;
    or r5 r6 into r7;
    assert.eq r7 true;
    not r2 into r8;
    not r8 into r9;
    is.neq r3 0field into r10;
    or r9 r10 into r11;
    assert.eq r11 true;
    call do_move r0.game.board.white r0.bomb 64field into r12;
    call do_move r0.game.board.black r0.bomb 64field into r13;
    is.eq r1 r0.bomb into r14;
    cast  0field 1field 2field 3field 4field 5field 6field 7field into r15 as [field; 8u32];
    call go_dir r0.bomb r15[0u32] into r16;
    is.neq r16 64field into r17;
    call do_move r12 r1 64field into r18;
    call do_move r13 r1 64field into r19;
    ternary r17 r18[0u32].square r12[0u32].square into r20;
    ternary r17 r18[0u32].piece r12[0u32].piece into r21;
    cast r20 r21 into r22 as PlacedPiece;
    ternary r17 r18[1u32].square r12[1u32].square into r23;
    ternary r17 r18[1u32].piece r12[1u32].piece into r24;
    cast r23 r24 into r25 as PlacedPiece;
    ternary r17 r18[2u32].square r12[2u32].square into r26;
    ternary r17 r18[2u32].piece r12[2u32].piece into r27;
    cast r26 r27 into r28 as PlacedPiece;
    ternary r17 r18[3u32].square r12[3u32].square into r29;
    ternary r17 r18[3u32].piece r12[3u32].piece into r30;
    cast r29 r30 into r31 as PlacedPiece;
    ternary r17 r18[4u32].square r12[4u32].square into r32;
    ternary r17 r18[4u32].piece r12[4u32].piece into r33;
    cast r32 r33 into r34 as PlacedPiece;
    ternary r17 r18[5u32].square r12[5u32].square into r35;
    ternary r17 r18[5u32].piece r12[5u32].piece into r36;
    cast r35 r36 into r37 as PlacedPiece;
    ternary r17 r18[6u32].square r12[6u32].square into r38;
    ternary r17 r18[6u32].piece r12[6u32].piece into r39;
    cast r38 r39 into r40 as PlacedPiece;
    ternary r17 r18[7u32].square r12[7u32].square into r41;
    ternary r17 r18[7u32].piece r12[7u32].piece into r42;
    cast r41 r42 into r43 as PlacedPiece;
    ternary r17 r18[8u32].square r12[8u32].square into r44;
    ternary r17 r18[8u32].piece r12[8u32].piece into r45;
    cast r44 r45 into r46 as PlacedPiece;
    ternary r17 r18[9u32].square r12[9u32].square into r47;
    ternary r17 r18[9u32].piece r12[9u32].piece into r48;
    cast r47 r48 into r49 as PlacedPiece;
    ternary r17 r18[10u32].square r12[10u32].square into r50;
    ternary r17 r18[10u32].piece r12[10u32].piece into r51;
    cast r50 r51 into r52 as PlacedPiece;
    ternary r17 r18[11u32].square r12[11u32].square into r53;
    ternary r17 r18[11u32].piece r12[11u32].piece into r54;
    cast r53 r54 into r55 as PlacedPiece;
    ternary r17 r18[12u32].square r12[12u32].square into r56;
    ternary r17 r18[12u32].piece r12[12u32].piece into r57;
    cast r56 r57 into r58 as PlacedPiece;
    ternary r17 r18[13u32].square r12[13u32].square into r59;
    ternary r17 r18[13u32].piece r12[13u32].piece into r60;
    cast r59 r60 into r61 as PlacedPiece;
    ternary r17 r18[14u32].square r12[14u32].square into r62;
    ternary r17 r18[14u32].piece r12[14u32].piece into r63;
    cast r62 r63 into r64 as PlacedPiece;
    ternary r17 r18[15u32].square r12[15u32].square into r65;
    ternary r17 r18[15u32].piece r12[15u32].piece into r66;
    cast r65 r66 into r67 as PlacedPiece;
    cast  r22 r25 r28 r31 r34 r37 r40 r43 r46 r49 r52 r55 r58 r61 r64 r67 into r68 as [PlacedPiece; 16u32];
    ternary r17 r19[0u32].square r13[0u32].square into r69;
    ternary r17 r19[0u32].piece r13[0u32].piece into r70;
    cast r69 r70 into r71 as PlacedPiece;
    ternary r17 r19[1u32].square r13[1u32].square into r72;
    ternary r17 r19[1u32].piece r13[1u32].piece into r73;
    cast r72 r73 into r74 as PlacedPiece;
    ternary r17 r19[2u32].square r13[2u32].square into r75;
    ternary r17 r19[2u32].piece r13[2u32].piece into r76;
    cast r75 r76 into r77 as PlacedPiece;
    ternary r17 r19[3u32].square r13[3u32].square into r78;
    ternary r17 r19[3u32].piece r13[3u32].piece into r79;
    cast r78 r79 into r80 as PlacedPiece;
    ternary r17 r19[4u32].square r13[4u32].square into r81;
    ternary r17 r19[4u32].piece r13[4u32].piece into r82;
    cast r81 r82 into r83 as PlacedPiece;
    ternary r17 r19[5u32].square r13[5u32].square into r84;
    ternary r17 r19[5u32].piece r13[5u32].piece into r85;
    cast r84 r85 into r86 as PlacedPiece;
    ternary r17 r19[6u32].square r13[6u32].square into r87;
    ternary r17 r19[6u32].piece r13[6u32].piece into r88;
    cast r87 r88 into r89 as PlacedPiece;
    ternary r17 r19[7u32].square r13[7u32].square into r90;
    ternary r17 r19[7u32].piece r13[7u32].piece into r91;
    cast r90 r91 into r92 as PlacedPiece;
    ternary r17 r19[8u32].square r13[8u32].square into r93;
    ternary r17 r19[8u32].piece r13[8u32].piece into r94;
    cast r93 r94 into r95 as PlacedPiece;
    ternary r17 r19[9u32].square r13[9u32].square into r96;
    ternary r17 r19[9u32].piece r13[9u32].piece into r97;
    cast r96 r97 into r98 as PlacedPiece;
    ternary r17 r19[10u32].square r13[10u32].square into r99;
    ternary r17 r19[10u32].piece r13[10u32].piece into r100;
    cast r99 r100 into r101 as PlacedPiece;
    ternary r17 r19[11u32].square r13[11u32].square into r102;
    ternary r17 r19[11u32].piece r13[11u32].piece into r103;
    cast r102 r103 into r104 as PlacedPiece;
    ternary r17 r19[12u32].square r13[12u32].square into r105;
    ternary r17 r19[12u32].piece r13[12u32].piece into r106;
    cast r105 r106 into r107 as PlacedPiece;
    ternary r17 r19[13u32].square r13[13u32].square into r108;
    ternary r17 r19[13u32].piece r13[13u32].piece into r109;
    cast r108 r109 into r110 as PlacedPiece;
    ternary r17 r19[14u32].square r13[14u32].square into r111;
    ternary r17 r19[14u32].piece r13[14u32].piece into r112;
    cast r111 r112 into r113 as PlacedPiece;
    ternary r17 r19[15u32].square r13[15u32].square into r114;
    ternary r17 r19[15u32].piece r13[15u32].piece into r115;
    cast r114 r115 into r116 as PlacedPiece;
    cast  r71 r74 r77 r80 r83 r86 r89 r92 r95 r98 r101 r104 r107 r110 r113 r116 into r117 as [PlacedPiece; 16u32];
    call go_dir r0.bomb r15[1u32] into r118;
    is.neq r118 64field into r119;
    call do_move r68 r1 64field into r120;
    call do_move r117 r1 64field into r121;
    ternary r119 r120[0u32].square r68[0u32].square into r122;
    ternary r119 r120[0u32].piece r68[0u32].piece into r123;
    cast r122 r123 into r124 as PlacedPiece;
    ternary r119 r120[1u32].square r68[1u32].square into r125;
    ternary r119 r120[1u32].piece r68[1u32].piece into r126;
    cast r125 r126 into r127 as PlacedPiece;
    ternary r119 r120[2u32].square r68[2u32].square into r128;
    ternary r119 r120[2u32].piece r68[2u32].piece into r129;
    cast r128 r129 into r130 as PlacedPiece;
    ternary r119 r120[3u32].square r68[3u32].square into r131;
    ternary r119 r120[3u32].piece r68[3u32].piece into r132;
    cast r131 r132 into r133 as PlacedPiece;
    ternary r119 r120[4u32].square r68[4u32].square into r134;
    ternary r119 r120[4u32].piece r68[4u32].piece into r135;
    cast r134 r135 into r136 as PlacedPiece;
    ternary r119 r120[5u32].square r68[5u32].square into r137;
    ternary r119 r120[5u32].piece r68[5u32].piece into r138;
    cast r137 r138 into r139 as PlacedPiece;
    ternary r119 r120[6u32].square r68[6u32].square into r140;
    ternary r119 r120[6u32].piece r68[6u32].piece into r141;
    cast r140 r141 into r142 as PlacedPiece;
    ternary r119 r120[7u32].square r68[7u32].square into r143;
    ternary r119 r120[7u32].piece r68[7u32].piece into r144;
    cast r143 r144 into r145 as PlacedPiece;
    ternary r119 r120[8u32].square r68[8u32].square into r146;
    ternary r119 r120[8u32].piece r68[8u32].piece into r147;
    cast r146 r147 into r148 as PlacedPiece;
    ternary r119 r120[9u32].square r68[9u32].square into r149;
    ternary r119 r120[9u32].piece r68[9u32].piece into r150;
    cast r149 r150 into r151 as PlacedPiece;
    ternary r119 r120[10u32].square r68[10u32].square into r152;
    ternary r119 r120[10u32].piece r68[10u32].piece into r153;
    cast r152 r153 into r154 as PlacedPiece;
    ternary r119 r120[11u32].square r68[11u32].square into r155;
    ternary r119 r120[11u32].piece r68[11u32].piece into r156;
    cast r155 r156 into r157 as PlacedPiece;
    ternary r119 r120[12u32].square r68[12u32].square into r158;
    ternary r119 r120[12u32].piece r68[12u32].piece into r159;
    cast r158 r159 into r160 as PlacedPiece;
    ternary r119 r120[13u32].square r68[13u32].square into r161;
    ternary r119 r120[13u32].piece r68[13u32].piece into r162;
    cast r161 r162 into r163 as PlacedPiece;
    ternary r119 r120[14u32].square r68[14u32].square into r164;
    ternary r119 r120[14u32].piece r68[14u32].piece into r165;
    cast r164 r165 into r166 as PlacedPiece;
    ternary r119 r120[15u32].square r68[15u32].square into r167;
    ternary r119 r120[15u32].piece r68[15u32].piece into r168;
    cast r167 r168 into r169 as PlacedPiece;
    cast  r124 r127 r130 r133 r136 r139 r142 r145 r148 r151 r154 r157 r160 r163 r166 r169 into r170 as [PlacedPiece; 16u32];
    ternary r119 r121[0u32].square r117[0u32].square into r171;
    ternary r119 r121[0u32].piece r117[0u32].piece into r172;
    cast r171 r172 into r173 as PlacedPiece;
    ternary r119 r121[1u32].square r117[1u32].square into r174;
    ternary r119 r121[1u32].piece r117[1u32].piece into r175;
    cast r174 r175 into r176 as PlacedPiece;
    ternary r119 r121[2u32].square r117[2u32].square into r177;
    ternary r119 r121[2u32].piece r117[2u32].piece into r178;
    cast r177 r178 into r179 as PlacedPiece;
    ternary r119 r121[3u32].square r117[3u32].square into r180;
    ternary r119 r121[3u32].piece r117[3u32].piece into r181;
    cast r180 r181 into r182 as PlacedPiece;
    ternary r119 r121[4u32].square r117[4u32].square into r183;
    ternary r119 r121[4u32].piece r117[4u32].piece into r184;
    cast r183 r184 into r185 as PlacedPiece;
    ternary r119 r121[5u32].square r117[5u32].square into r186;
    ternary r119 r121[5u32].piece r117[5u32].piece into r187;
    cast r186 r187 into r188 as PlacedPiece;
    ternary r119 r121[6u32].square r117[6u32].square into r189;
    ternary r119 r121[6u32].piece r117[6u32].piece into r190;
    cast r189 r190 into r191 as PlacedPiece;
    ternary r119 r121[7u32].square r117[7u32].square into r192;
    ternary r119 r121[7u32].piece r117[7u32].piece into r193;
    cast r192 r193 into r194 as PlacedPiece;
    ternary r119 r121[8u32].square r117[8u32].square into r195;
    ternary r119 r121[8u32].piece r117[8u32].piece into r196;
    cast r195 r196 into r197 as PlacedPiece;
    ternary r119 r121[9u32].square r117[9u32].square into r198;
    ternary r119 r121[9u32].piece r117[9u32].piece into r199;
    cast r198 r199 into r200 as PlacedPiece;
    ternary r119 r121[10u32].square r117[10u32].square into r201;
    ternary r119 r121[10u32].piece r117[10u32].piece into r202;
    cast r201 r202 into r203 as PlacedPiece;
    ternary r119 r121[11u32].square r117[11u32].square into r204;
    ternary r119 r121[11u32].piece r117[11u32].piece into r205;
    cast r204 r205 into r206 as PlacedPiece;
    ternary r119 r121[12u32].square r117[12u32].square into r207;
    ternary r119 r121[12u32].piece r117[12u32].piece into r208;
    cast r207 r208 into r209 as PlacedPiece;
    ternary r119 r121[13u32].square r117[13u32].square into r210;
    ternary r119 r121[13u32].piece r117[13u32].piece into r211;
    cast r210 r211 into r212 as PlacedPiece;
    ternary r119 r121[14u32].square r117[14u32].square into r213;
    ternary r119 r121[14u32].piece r117[14u32].piece into r214;
    cast r213 r214 into r215 as PlacedPiece;
    ternary r119 r121[15u32].square r117[15u32].square into r216;
    ternary r119 r121[15u32].piece r117[15u32].piece into r217;
    cast r216 r217 into r218 as PlacedPiece;
    cast  r173 r176 r179 r182 r185 r188 r191 r194 r197 r200 r203 r206 r209 r212 r215 r218 into r219 as [PlacedPiece; 16u32];
    call go_dir r0.bomb r15[2u32] into r220;
    is.neq r220 64field into r221;
    call do_move r170 r1 64field into r222;
    call do_move r219 r1 64field into r223;
    ternary r221 r222[0u32].square r170[0u32].square into r224;
    ternary r221 r222[0u32].piece r170[0u32].piece into r225;
    cast r224 r225 into r226 as PlacedPiece;
    ternary r221 r222[1u32].square r170[1u32].square into r227;
    ternary r221 r222[1u32].piece r170[1u32].piece into r228;
    cast r227 r228 into r229 as PlacedPiece;
    ternary r221 r222[2u32].square r170[2u32].square into r230;
    ternary r221 r222[2u32].piece r170[2u32].piece into r231;
    cast r230 r231 into r232 as PlacedPiece;
    ternary r221 r222[3u32].square r170[3u32].square into r233;
    ternary r221 r222[3u32].piece r170[3u32].piece into r234;
    cast r233 r234 into r235 as PlacedPiece;
    ternary r221 r222[4u32].square r170[4u32].square into r236;
    ternary r221 r222[4u32].piece r170[4u32].piece into r237;
    cast r236 r237 into r238 as PlacedPiece;
    ternary r221 r222[5u32].square r170[5u32].square into r239;
    ternary r221 r222[5u32].piece r170[5u32].piece into r240;
    cast r239 r240 into r241 as PlacedPiece;
    ternary r221 r222[6u32].square r170[6u32].square into r242;
    ternary r221 r222[6u32].piece r170[6u32].piece into r243;
    cast r242 r243 into r244 as PlacedPiece;
    ternary r221 r222[7u32].square r170[7u32].square into r245;
    ternary r221 r222[7u32].piece r170[7u32].piece into r246;
    cast r245 r246 into r247 as PlacedPiece;
    ternary r221 r222[8u32].square r170[8u32].square into r248;
    ternary r221 r222[8u32].piece r170[8u32].piece into r249;
    cast r248 r249 into r250 as PlacedPiece;
    ternary r221 r222[9u32].square r170[9u32].square into r251;
    ternary r221 r222[9u32].piece r170[9u32].piece into r252;
    cast r251 r252 into r253 as PlacedPiece;
    ternary r221 r222[10u32].square r170[10u32].square into r254;
    ternary r221 r222[10u32].piece r170[10u32].piece into r255;
    cast r254 r255 into r256 as PlacedPiece;
    ternary r221 r222[11u32].square r170[11u32].square into r257;
    ternary r221 r222[11u32].piece r170[11u32].piece into r258;
    cast r257 r258 into r259 as PlacedPiece;
    ternary r221 r222[12u32].square r170[12u32].square into r260;
    ternary r221 r222[12u32].piece r170[12u32].piece into r261;
    cast r260 r261 into r262 as PlacedPiece;
    ternary r221 r222[13u32].square r170[13u32].square into r263;
    ternary r221 r222[13u32].piece r170[13u32].piece into r264;
    cast r263 r264 into r265 as PlacedPiece;
    ternary r221 r222[14u32].square r170[14u32].square into r266;
    ternary r221 r222[14u32].piece r170[14u32].piece into r267;
    cast r266 r267 into r268 as PlacedPiece;
    ternary r221 r222[15u32].square r170[15u32].square into r269;
    ternary r221 r222[15u32].piece r170[15u32].piece into r270;
    cast r269 r270 into r271 as PlacedPiece;
    cast  r226 r229 r232 r235 r238 r241 r244 r247 r250 r253 r256 r259 r262 r265 r268 r271 into r272 as [PlacedPiece; 16u32];
    ternary r221 r223[0u32].square r219[0u32].square into r273;
    ternary r221 r223[0u32].piece r219[0u32].piece into r274;
    cast r273 r274 into r275 as PlacedPiece;
    ternary r221 r223[1u32].square r219[1u32].square into r276;
    ternary r221 r223[1u32].piece r219[1u32].piece into r277;
    cast r276 r277 into r278 as PlacedPiece;
    ternary r221 r223[2u32].square r219[2u32].square into r279;
    ternary r221 r223[2u32].piece r219[2u32].piece into r280;
    cast r279 r280 into r281 as PlacedPiece;
    ternary r221 r223[3u32].square r219[3u32].square into r282;
    ternary r221 r223[3u32].piece r219[3u32].piece into r283;
    cast r282 r283 into r284 as PlacedPiece;
    ternary r221 r223[4u32].square r219[4u32].square into r285;
    ternary r221 r223[4u32].piece r219[4u32].piece into r286;
    cast r285 r286 into r287 as PlacedPiece;
    ternary r221 r223[5u32].square r219[5u32].square into r288;
    ternary r221 r223[5u32].piece r219[5u32].piece into r289;
    cast r288 r289 into r290 as PlacedPiece;
    ternary r221 r223[6u32].square r219[6u32].square into r291;
    ternary r221 r223[6u32].piece r219[6u32].piece into r292;
    cast r291 r292 into r293 as PlacedPiece;
    ternary r221 r223[7u32].square r219[7u32].square into r294;
    ternary r221 r223[7u32].piece r219[7u32].piece into r295;
    cast r294 r295 into r296 as PlacedPiece;
    ternary r221 r223[8u32].square r219[8u32].square into r297;
    ternary r221 r223[8u32].piece r219[8u32].piece into r298;
    cast r297 r298 into r299 as PlacedPiece;
    ternary r221 r223[9u32].square r219[9u32].square into r300;
    ternary r221 r223[9u32].piece r219[9u32].piece into r301;
    cast r300 r301 into r302 as PlacedPiece;
    ternary r221 r223[10u32].square r219[10u32].square into r303;
    ternary r221 r223[10u32].piece r219[10u32].piece into r304;
    cast r303 r304 into r305 as PlacedPiece;
    ternary r221 r223[11u32].square r219[11u32].square into r306;
    ternary r221 r223[11u32].piece r219[11u32].piece into r307;
    cast r306 r307 into r308 as PlacedPiece;
    ternary r221 r223[12u32].square r219[12u32].square into r309;
    ternary r221 r223[12u32].piece r219[12u32].piece into r310;
    cast r309 r310 into r311 as PlacedPiece;
    ternary r221 r223[13u32].square r219[13u32].square into r312;
    ternary r221 r223[13u32].piece r219[13u32].piece into r313;
    cast r312 r313 into r314 as PlacedPiece;
    ternary r221 r223[14u32].square r219[14u32].square into r315;
    ternary r221 r223[14u32].piece r219[14u32].piece into r316;
    cast r315 r316 into r317 as PlacedPiece;
    ternary r221 r223[15u32].square r219[15u32].square into r318;
    ternary r221 r223[15u32].piece r219[15u32].piece into r319;
    cast r318 r319 into r320 as PlacedPiece;
    cast  r275 r278 r281 r284 r287 r290 r293 r296 r299 r302 r305 r308 r311 r314 r317 r320 into r321 as [PlacedPiece; 16u32];
    call go_dir r0.bomb r15[3u32] into r322;
    is.neq r322 64field into r323;
    call do_move r272 r1 64field into r324;
    call do_move r321 r1 64field into r325;
    ternary r323 r324[0u32].square r272[0u32].square into r326;
    ternary r323 r324[0u32].piece r272[0u32].piece into r327;
    cast r326 r327 into r328 as PlacedPiece;
    ternary r323 r324[1u32].square r272[1u32].square into r329;
    ternary r323 r324[1u32].piece r272[1u32].piece into r330;
    cast r329 r330 into r331 as PlacedPiece;
    ternary r323 r324[2u32].square r272[2u32].square into r332;
    ternary r323 r324[2u32].piece r272[2u32].piece into r333;
    cast r332 r333 into r334 as PlacedPiece;
    ternary r323 r324[3u32].square r272[3u32].square into r335;
    ternary r323 r324[3u32].piece r272[3u32].piece into r336;
    cast r335 r336 into r337 as PlacedPiece;
    ternary r323 r324[4u32].square r272[4u32].square into r338;
    ternary r323 r324[4u32].piece r272[4u32].piece into r339;
    cast r338 r339 into r340 as PlacedPiece;
    ternary r323 r324[5u32].square r272[5u32].square into r341;
    ternary r323 r324[5u32].piece r272[5u32].piece into r342;
    cast r341 r342 into r343 as PlacedPiece;
    ternary r323 r324[6u32].square r272[6u32].square into r344;
    ternary r323 r324[6u32].piece r272[6u32].piece into r345;
    cast r344 r345 into r346 as PlacedPiece;
    ternary r323 r324[7u32].square r272[7u32].square into r347;
    ternary r323 r324[7u32].piece r272[7u32].piece into r348;
    cast r347 r348 into r349 as PlacedPiece;
    ternary r323 r324[8u32].square r272[8u32].square into r350;
    ternary r323 r324[8u32].piece r272[8u32].piece into r351;
    cast r350 r351 into r352 as PlacedPiece;
    ternary r323 r324[9u32].square r272[9u32].square into r353;
    ternary r323 r324[9u32].piece r272[9u32].piece into r354;
    cast r353 r354 into r355 as PlacedPiece;
    ternary r323 r324[10u32].square r272[10u32].square into r356;
    ternary r323 r324[10u32].piece r272[10u32].piece into r357;
    cast r356 r357 into r358 as PlacedPiece;
    ternary r323 r324[11u32].square r272[11u32].square into r359;
    ternary r323 r324[11u32].piece r272[11u32].piece into r360;
    cast r359 r360 into r361 as PlacedPiece;
    ternary r323 r324[12u32].square r272[12u32].square into r362;
    ternary r323 r324[12u32].piece r272[12u32].piece into r363;
    cast r362 r363 into r364 as PlacedPiece;
    ternary r323 r324[13u32].square r272[13u32].square into r365;
    ternary r323 r324[13u32].piece r272[13u32].piece into r366;
    cast r365 r366 into r367 as PlacedPiece;
    ternary r323 r324[14u32].square r272[14u32].square into r368;
    ternary r323 r324[14u32].piece r272[14u32].piece into r369;
    cast r368 r369 into r370 as PlacedPiece;
    ternary r323 r324[15u32].square r272[15u32].square into r371;
    ternary r323 r324[15u32].piece r272[15u32].piece into r372;
    cast r371 r372 into r373 as PlacedPiece;
    cast  r328 r331 r334 r337 r340 r343 r346 r349 r352 r355 r358 r361 r364 r367 r370 r373 into r374 as [PlacedPiece; 16u32];
    ternary r323 r325[0u32].square r321[0u32].square into r375;
    ternary r323 r325[0u32].piece r321[0u32].piece into r376;
    cast r375 r376 into r377 as PlacedPiece;
    ternary r323 r325[1u32].square r321[1u32].square into r378;
    ternary r323 r325[1u32].piece r321[1u32].piece into r379;
    cast r378 r379 into r380 as PlacedPiece;
    ternary r323 r325[2u32].square r321[2u32].square into r381;
    ternary r323 r325[2u32].piece r321[2u32].piece into r382;
    cast r381 r382 into r383 as PlacedPiece;
    ternary r323 r325[3u32].square r321[3u32].square into r384;
    ternary r323 r325[3u32].piece r321[3u32].piece into r385;
    cast r384 r385 into r386 as PlacedPiece;
    ternary r323 r325[4u32].square r321[4u32].square into r387;
    ternary r323 r325[4u32].piece r321[4u32].piece into r388;
    cast r387 r388 into r389 as PlacedPiece;
    ternary r323 r325[5u32].square r321[5u32].square into r390;
    ternary r323 r325[5u32].piece r321[5u32].piece into r391;
    cast r390 r391 into r392 as PlacedPiece;
    ternary r323 r325[6u32].square r321[6u32].square into r393;
    ternary r323 r325[6u32].piece r321[6u32].piece into r394;
    cast r393 r394 into r395 as PlacedPiece;
    ternary r323 r325[7u32].square r321[7u32].square into r396;
    ternary r323 r325[7u32].piece r321[7u32].piece into r397;
    cast r396 r397 into r398 as PlacedPiece;
    ternary r323 r325[8u32].square r321[8u32].square into r399;
    ternary r323 r325[8u32].piece r321[8u32].piece into r400;
    cast r399 r400 into r401 as PlacedPiece;
    ternary r323 r325[9u32].square r321[9u32].square into r402;
    ternary r323 r325[9u32].piece r321[9u32].piece into r403;
    cast r402 r403 into r404 as PlacedPiece;
    ternary r323 r325[10u32].square r321[10u32].square into r405;
    ternary r323 r325[10u32].piece r321[10u32].piece into r406;
    cast r405 r406 into r407 as PlacedPiece;
    ternary r323 r325[11u32].square r321[11u32].square into r408;
    ternary r323 r325[11u32].piece r321[11u32].piece into r409;
    cast r408 r409 into r410 as PlacedPiece;
    ternary r323 r325[12u32].square r321[12u32].square into r411;
    ternary r323 r325[12u32].piece r321[12u32].piece into r412;
    cast r411 r412 into r413 as PlacedPiece;
    ternary r323 r325[13u32].square r321[13u32].square into r414;
    ternary r323 r325[13u32].piece r321[13u32].piece into r415;
    cast r414 r415 into r416 as PlacedPiece;
    ternary r323 r325[14u32].square r321[14u32].square into r417;
    ternary r323 r325[14u32].piece r321[14u32].piece into r418;
    cast r417 r418 into r419 as PlacedPiece;
    ternary r323 r325[15u32].square r321[15u32].square into r420;
    ternary r323 r325[15u32].piece r321[15u32].piece into r421;
    cast r420 r421 into r422 as PlacedPiece;
    cast  r377 r380 r383 r386 r389 r392 r395 r398 r401 r404 r407 r410 r413 r416 r419 r422 into r423 as [PlacedPiece; 16u32];
    call go_dir r0.bomb r15[4u32] into r424;
    is.neq r424 64field into r425;
    call do_move r374 r1 64field into r426;
    call do_move r423 r1 64field into r427;
    ternary r425 r426[0u32].square r374[0u32].square into r428;
    ternary r425 r426[0u32].piece r374[0u32].piece into r429;
    cast r428 r429 into r430 as PlacedPiece;
    ternary r425 r426[1u32].square r374[1u32].square into r431;
    ternary r425 r426[1u32].piece r374[1u32].piece into r432;
    cast r431 r432 into r433 as PlacedPiece;
    ternary r425 r426[2u32].square r374[2u32].square into r434;
    ternary r425 r426[2u32].piece r374[2u32].piece into r435;
    cast r434 r435 into r436 as PlacedPiece;
    ternary r425 r426[3u32].square r374[3u32].square into r437;
    ternary r425 r426[3u32].piece r374[3u32].piece into r438;
    cast r437 r438 into r439 as PlacedPiece;
    ternary r425 r426[4u32].square r374[4u32].square into r440;
    ternary r425 r426[4u32].piece r374[4u32].piece into r441;
    cast r440 r441 into r442 as PlacedPiece;
    ternary r425 r426[5u32].square r374[5u32].square into r443;
    ternary r425 r426[5u32].piece r374[5u32].piece into r444;
    cast r443 r444 into r445 as PlacedPiece;
    ternary r425 r426[6u32].square r374[6u32].square into r446;
    ternary r425 r426[6u32].piece r374[6u32].piece into r447;
    cast r446 r447 into r448 as PlacedPiece;
    ternary r425 r426[7u32].square r374[7u32].square into r449;
    ternary r425 r426[7u32].piece r374[7u32].piece into r450;
    cast r449 r450 into r451 as PlacedPiece;
    ternary r425 r426[8u32].square r374[8u32].square into r452;
    ternary r425 r426[8u32].piece r374[8u32].piece into r453;
    cast r452 r453 into r454 as PlacedPiece;
    ternary r425 r426[9u32].square r374[9u32].square into r455;
    ternary r425 r426[9u32].piece r374[9u32].piece into r456;
    cast r455 r456 into r457 as PlacedPiece;
    ternary r425 r426[10u32].square r374[10u32].square into r458;
    ternary r425 r426[10u32].piece r374[10u32].piece into r459;
    cast r458 r459 into r460 as PlacedPiece;
    ternary r425 r426[11u32].square r374[11u32].square into r461;
    ternary r425 r426[11u32].piece r374[11u32].piece into r462;
    cast r461 r462 into r463 as PlacedPiece;
    ternary r425 r426[12u32].square r374[12u32].square into r464;
    ternary r425 r426[12u32].piece r374[12u32].piece into r465;
    cast r464 r465 into r466 as PlacedPiece;
    ternary r425 r426[13u32].square r374[13u32].square into r467;
    ternary r425 r426[13u32].piece r374[13u32].piece into r468;
    cast r467 r468 into r469 as PlacedPiece;
    ternary r425 r426[14u32].square r374[14u32].square into r470;
    ternary r425 r426[14u32].piece r374[14u32].piece into r471;
    cast r470 r471 into r472 as PlacedPiece;
    ternary r425 r426[15u32].square r374[15u32].square into r473;
    ternary r425 r426[15u32].piece r374[15u32].piece into r474;
    cast r473 r474 into r475 as PlacedPiece;
    cast  r430 r433 r436 r439 r442 r445 r448 r451 r454 r457 r460 r463 r466 r469 r472 r475 into r476 as [PlacedPiece; 16u32];
    ternary r425 r427[0u32].square r423[0u32].square into r477;
    ternary r425 r427[0u32].piece r423[0u32].piece into r478;
    cast r477 r478 into r479 as PlacedPiece;
    ternary r425 r427[1u32].square r423[1u32].square into r480;
    ternary r425 r427[1u32].piece r423[1u32].piece into r481;
    cast r480 r481 into r482 as PlacedPiece;
    ternary r425 r427[2u32].square r423[2u32].square into r483;
    ternary r425 r427[2u32].piece r423[2u32].piece into r484;
    cast r483 r484 into r485 as PlacedPiece;
    ternary r425 r427[3u32].square r423[3u32].square into r486;
    ternary r425 r427[3u32].piece r423[3u32].piece into r487;
    cast r486 r487 into r488 as PlacedPiece;
    ternary r425 r427[4u32].square r423[4u32].square into r489;
    ternary r425 r427[4u32].piece r423[4u32].piece into r490;
    cast r489 r490 into r491 as PlacedPiece;
    ternary r425 r427[5u32].square r423[5u32].square into r492;
    ternary r425 r427[5u32].piece r423[5u32].piece into r493;
    cast r492 r493 into r494 as PlacedPiece;
    ternary r425 r427[6u32].square r423[6u32].square into r495;
    ternary r425 r427[6u32].piece r423[6u32].piece into r496;
    cast r495 r496 into r497 as PlacedPiece;
    ternary r425 r427[7u32].square r423[7u32].square into r498;
    ternary r425 r427[7u32].piece r423[7u32].piece into r499;
    cast r498 r499 into r500 as PlacedPiece;
    ternary r425 r427[8u32].square r423[8u32].square into r501;
    ternary r425 r427[8u32].piece r423[8u32].piece into r502;
    cast r501 r502 into r503 as PlacedPiece;
    ternary r425 r427[9u32].square r423[9u32].square into r504;
    ternary r425 r427[9u32].piece r423[9u32].piece into r505;
    cast r504 r505 into r506 as PlacedPiece;
    ternary r425 r427[10u32].square r423[10u32].square into r507;
    ternary r425 r427[10u32].piece r423[10u32].piece into r508;
    cast r507 r508 into r509 as PlacedPiece;
    ternary r425 r427[11u32].square r423[11u32].square into r510;
    ternary r425 r427[11u32].piece r423[11u32].piece into r511;
    cast r510 r511 into r512 as PlacedPiece;
    ternary r425 r427[12u32].square r423[12u32].square into r513;
    ternary r425 r427[12u32].piece r423[12u32].piece into r514;
    cast r513 r514 into r515 as PlacedPiece;
    ternary r425 r427[13u32].square r423[13u32].square into r516;
    ternary r425 r427[13u32].piece r423[13u32].piece into r517;
    cast r516 r517 into r518 as PlacedPiece;
    ternary r425 r427[14u32].square r423[14u32].square into r519;
    ternary r425 r427[14u32].piece r423[14u32].piece into r520;
    cast r519 r520 into r521 as PlacedPiece;
    ternary r425 r427[15u32].square r423[15u32].square into r522;
    ternary r425 r427[15u32].piece r423[15u32].piece into r523;
    cast r522 r523 into r524 as PlacedPiece;
    cast  r479 r482 r485 r488 r491 r494 r497 r500 r503 r506 r509 r512 r515 r518 r521 r524 into r525 as [PlacedPiece; 16u32];
    call go_dir r0.bomb r15[5u32] into r526;
    is.neq r526 64field into r527;
    call do_move r476 r1 64field into r528;
    call do_move r525 r1 64field into r529;
    ternary r527 r528[0u32].square r476[0u32].square into r530;
    ternary r527 r528[0u32].piece r476[0u32].piece into r531;
    cast r530 r531 into r532 as PlacedPiece;
    ternary r527 r528[1u32].square r476[1u32].square into r533;
    ternary r527 r528[1u32].piece r476[1u32].piece into r534;
    cast r533 r534 into r535 as PlacedPiece;
    ternary r527 r528[2u32].square r476[2u32].square into r536;
    ternary r527 r528[2u32].piece r476[2u32].piece into r537;
    cast r536 r537 into r538 as PlacedPiece;
    ternary r527 r528[3u32].square r476[3u32].square into r539;
    ternary r527 r528[3u32].piece r476[3u32].piece into r540;
    cast r539 r540 into r541 as PlacedPiece;
    ternary r527 r528[4u32].square r476[4u32].square into r542;
    ternary r527 r528[4u32].piece r476[4u32].piece into r543;
    cast r542 r543 into r544 as PlacedPiece;
    ternary r527 r528[5u32].square r476[5u32].square into r545;
    ternary r527 r528[5u32].piece r476[5u32].piece into r546;
    cast r545 r546 into r547 as PlacedPiece;
    ternary r527 r528[6u32].square r476[6u32].square into r548;
    ternary r527 r528[6u32].piece r476[6u32].piece into r549;
    cast r548 r549 into r550 as PlacedPiece;
    ternary r527 r528[7u32].square r476[7u32].square into r551;
    ternary r527 r528[7u32].piece r476[7u32].piece into r552;
    cast r551 r552 into r553 as PlacedPiece;
    ternary r527 r528[8u32].square r476[8u32].square into r554;
    ternary r527 r528[8u32].piece r476[8u32].piece into r555;
    cast r554 r555 into r556 as PlacedPiece;
    ternary r527 r528[9u32].square r476[9u32].square into r557;
    ternary r527 r528[9u32].piece r476[9u32].piece into r558;
    cast r557 r558 into r559 as PlacedPiece;
    ternary r527 r528[10u32].square r476[10u32].square into r560;
    ternary r527 r528[10u32].piece r476[10u32].piece into r561;
    cast r560 r561 into r562 as PlacedPiece;
    ternary r527 r528[11u32].square r476[11u32].square into r563;
    ternary r527 r528[11u32].piece r476[11u32].piece into r564;
    cast r563 r564 into r565 as PlacedPiece;
    ternary r527 r528[12u32].square r476[12u32].square into r566;
    ternary r527 r528[12u32].piece r476[12u32].piece into r567;
    cast r566 r567 into r568 as PlacedPiece;
    ternary r527 r528[13u32].square r476[13u32].square into r569;
    ternary r527 r528[13u32].piece r476[13u32].piece into r570;
    cast r569 r570 into r571 as PlacedPiece;
    ternary r527 r528[14u32].square r476[14u32].square into r572;
    ternary r527 r528[14u32].piece r476[14u32].piece into r573;
    cast r572 r573 into r574 as PlacedPiece;
    ternary r527 r528[15u32].square r476[15u32].square into r575;
    ternary r527 r528[15u32].piece r476[15u32].piece into r576;
    cast r575 r576 into r577 as PlacedPiece;
    cast  r532 r535 r538 r541 r544 r547 r550 r553 r556 r559 r562 r565 r568 r571 r574 r577 into r578 as [PlacedPiece; 16u32];
    ternary r527 r529[0u32].square r525[0u32].square into r579;
    ternary r527 r529[0u32].piece r525[0u32].piece into r580;
    cast r579 r580 into r581 as PlacedPiece;
    ternary r527 r529[1u32].square r525[1u32].square into r582;
    ternary r527 r529[1u32].piece r525[1u32].piece into r583;
    cast r582 r583 into r584 as PlacedPiece;
    ternary r527 r529[2u32].square r525[2u32].square into r585;
    ternary r527 r529[2u32].piece r525[2u32].piece into r586;
    cast r585 r586 into r587 as PlacedPiece;
    ternary r527 r529[3u32].square r525[3u32].square into r588;
    ternary r527 r529[3u32].piece r525[3u32].piece into r589;
    cast r588 r589 into r590 as PlacedPiece;
    ternary r527 r529[4u32].square r525[4u32].square into r591;
    ternary r527 r529[4u32].piece r525[4u32].piece into r592;
    cast r591 r592 into r593 as PlacedPiece;
    ternary r527 r529[5u32].square r525[5u32].square into r594;
    ternary r527 r529[5u32].piece r525[5u32].piece into r595;
    cast r594 r595 into r596 as PlacedPiece;
    ternary r527 r529[6u32].square r525[6u32].square into r597;
    ternary r527 r529[6u32].piece r525[6u32].piece into r598;
    cast r597 r598 into r599 as PlacedPiece;
    ternary r527 r529[7u32].square r525[7u32].square into r600;
    ternary r527 r529[7u32].piece r525[7u32].piece into r601;
    cast r600 r601 into r602 as PlacedPiece;
    ternary r527 r529[8u32].square r525[8u32].square into r603;
    ternary r527 r529[8u32].piece r525[8u32].piece into r604;
    cast r603 r604 into r605 as PlacedPiece;
    ternary r527 r529[9u32].square r525[9u32].square into r606;
    ternary r527 r529[9u32].piece r525[9u32].piece into r607;
    cast r606 r607 into r608 as PlacedPiece;
    ternary r527 r529[10u32].square r525[10u32].square into r609;
    ternary r527 r529[10u32].piece r525[10u32].piece into r610;
    cast r609 r610 into r611 as PlacedPiece;
    ternary r527 r529[11u32].square r525[11u32].square into r612;
    ternary r527 r529[11u32].piece r525[11u32].piece into r613;
    cast r612 r613 into r614 as PlacedPiece;
    ternary r527 r529[12u32].square r525[12u32].square into r615;
    ternary r527 r529[12u32].piece r525[12u32].piece into r616;
    cast r615 r616 into r617 as PlacedPiece;
    ternary r527 r529[13u32].square r525[13u32].square into r618;
    ternary r527 r529[13u32].piece r525[13u32].piece into r619;
    cast r618 r619 into r620 as PlacedPiece;
    ternary r527 r529[14u32].square r525[14u32].square into r621;
    ternary r527 r529[14u32].piece r525[14u32].piece into r622;
    cast r621 r622 into r623 as PlacedPiece;
    ternary r527 r529[15u32].square r525[15u32].square into r624;
    ternary r527 r529[15u32].piece r525[15u32].piece into r625;
    cast r624 r625 into r626 as PlacedPiece;
    cast  r581 r584 r587 r590 r593 r596 r599 r602 r605 r608 r611 r614 r617 r620 r623 r626 into r627 as [PlacedPiece; 16u32];
    call go_dir r0.bomb r15[6u32] into r628;
    is.neq r628 64field into r629;
    call do_move r578 r1 64field into r630;
    call do_move r627 r1 64field into r631;
    ternary r629 r630[0u32].square r578[0u32].square into r632;
    ternary r629 r630[0u32].piece r578[0u32].piece into r633;
    cast r632 r633 into r634 as PlacedPiece;
    ternary r629 r630[1u32].square r578[1u32].square into r635;
    ternary r629 r630[1u32].piece r578[1u32].piece into r636;
    cast r635 r636 into r637 as PlacedPiece;
    ternary r629 r630[2u32].square r578[2u32].square into r638;
    ternary r629 r630[2u32].piece r578[2u32].piece into r639;
    cast r638 r639 into r640 as PlacedPiece;
    ternary r629 r630[3u32].square r578[3u32].square into r641;
    ternary r629 r630[3u32].piece r578[3u32].piece into r642;
    cast r641 r642 into r643 as PlacedPiece;
    ternary r629 r630[4u32].square r578[4u32].square into r644;
    ternary r629 r630[4u32].piece r578[4u32].piece into r645;
    cast r644 r645 into r646 as PlacedPiece;
    ternary r629 r630[5u32].square r578[5u32].square into r647;
    ternary r629 r630[5u32].piece r578[5u32].piece into r648;
    cast r647 r648 into r649 as PlacedPiece;
    ternary r629 r630[6u32].square r578[6u32].square into r650;
    ternary r629 r630[6u32].piece r578[6u32].piece into r651;
    cast r650 r651 into r652 as PlacedPiece;
    ternary r629 r630[7u32].square r578[7u32].square into r653;
    ternary r629 r630[7u32].piece r578[7u32].piece into r654;
    cast r653 r654 into r655 as PlacedPiece;
    ternary r629 r630[8u32].square r578[8u32].square into r656;
    ternary r629 r630[8u32].piece r578[8u32].piece into r657;
    cast r656 r657 into r658 as PlacedPiece;
    ternary r629 r630[9u32].square r578[9u32].square into r659;
    ternary r629 r630[9u32].piece r578[9u32].piece into r660;
    cast r659 r660 into r661 as PlacedPiece;
    ternary r629 r630[10u32].square r578[10u32].square into r662;
    ternary r629 r630[10u32].piece r578[10u32].piece into r663;
    cast r662 r663 into r664 as PlacedPiece;
    ternary r629 r630[11u32].square r578[11u32].square into r665;
    ternary r629 r630[11u32].piece r578[11u32].piece into r666;
    cast r665 r666 into r667 as PlacedPiece;
    ternary r629 r630[12u32].square r578[12u32].square into r668;
    ternary r629 r630[12u32].piece r578[12u32].piece into r669;
    cast r668 r669 into r670 as PlacedPiece;
    ternary r629 r630[13u32].square r578[13u32].square into r671;
    ternary r629 r630[13u32].piece r578[13u32].piece into r672;
    cast r671 r672 into r673 as PlacedPiece;
    ternary r629 r630[14u32].square r578[14u32].square into r674;
    ternary r629 r630[14u32].piece r578[14u32].piece into r675;
    cast r674 r675 into r676 as PlacedPiece;
    ternary r629 r630[15u32].square r578[15u32].square into r677;
    ternary r629 r630[15u32].piece r578[15u32].piece into r678;
    cast r677 r678 into r679 as PlacedPiece;
    cast  r634 r637 r640 r643 r646 r649 r652 r655 r658 r661 r664 r667 r670 r673 r676 r679 into r680 as [PlacedPiece; 16u32];
    ternary r629 r631[0u32].square r627[0u32].square into r681;
    ternary r629 r631[0u32].piece r627[0u32].piece into r682;
    cast r681 r682 into r683 as PlacedPiece;
    ternary r629 r631[1u32].square r627[1u32].square into r684;
    ternary r629 r631[1u32].piece r627[1u32].piece into r685;
    cast r684 r685 into r686 as PlacedPiece;
    ternary r629 r631[2u32].square r627[2u32].square into r687;
    ternary r629 r631[2u32].piece r627[2u32].piece into r688;
    cast r687 r688 into r689 as PlacedPiece;
    ternary r629 r631[3u32].square r627[3u32].square into r690;
    ternary r629 r631[3u32].piece r627[3u32].piece into r691;
    cast r690 r691 into r692 as PlacedPiece;
    ternary r629 r631[4u32].square r627[4u32].square into r693;
    ternary r629 r631[4u32].piece r627[4u32].piece into r694;
    cast r693 r694 into r695 as PlacedPiece;
    ternary r629 r631[5u32].square r627[5u32].square into r696;
    ternary r629 r631[5u32].piece r627[5u32].piece into r697;
    cast r696 r697 into r698 as PlacedPiece;
    ternary r629 r631[6u32].square r627[6u32].square into r699;
    ternary r629 r631[6u32].piece r627[6u32].piece into r700;
    cast r699 r700 into r701 as PlacedPiece;
    ternary r629 r631[7u32].square r627[7u32].square into r702;
    ternary r629 r631[7u32].piece r627[7u32].piece into r703;
    cast r702 r703 into r704 as PlacedPiece;
    ternary r629 r631[8u32].square r627[8u32].square into r705;
    ternary r629 r631[8u32].piece r627[8u32].piece into r706;
    cast r705 r706 into r707 as PlacedPiece;
    ternary r629 r631[9u32].square r627[9u32].square into r708;
    ternary r629 r631[9u32].piece r627[9u32].piece into r709;
    cast r708 r709 into r710 as PlacedPiece;
    ternary r629 r631[10u32].square r627[10u32].square into r711;
    ternary r629 r631[10u32].piece r627[10u32].piece into r712;
    cast r711 r712 into r713 as PlacedPiece;
    ternary r629 r631[11u32].square r627[11u32].square into r714;
    ternary r629 r631[11u32].piece r627[11u32].piece into r715;
    cast r714 r715 into r716 as PlacedPiece;
    ternary r629 r631[12u32].square r627[12u32].square into r717;
    ternary r629 r631[12u32].piece r627[12u32].piece into r718;
    cast r717 r718 into r719 as PlacedPiece;
    ternary r629 r631[13u32].square r627[13u32].square into r720;
    ternary r629 r631[13u32].piece r627[13u32].piece into r721;
    cast r720 r721 into r722 as PlacedPiece;
    ternary r629 r631[14u32].square r627[14u32].square into r723;
    ternary r629 r631[14u32].piece r627[14u32].piece into r724;
    cast r723 r724 into r725 as PlacedPiece;
    ternary r629 r631[15u32].square r627[15u32].square into r726;
    ternary r629 r631[15u32].piece r627[15u32].piece into r727;
    cast r726 r727 into r728 as PlacedPiece;
    cast  r683 r686 r689 r692 r695 r698 r701 r704 r707 r710 r713 r716 r719 r722 r725 r728 into r729 as [PlacedPiece; 16u32];
    ternary r14 r680[0u32].square r12[0u32].square into r730;
    ternary r14 r680[0u32].piece r12[0u32].piece into r731;
    cast r730 r731 into r732 as PlacedPiece;
    ternary r14 r680[1u32].square r12[1u32].square into r733;
    ternary r14 r680[1u32].piece r12[1u32].piece into r734;
    cast r733 r734 into r735 as PlacedPiece;
    ternary r14 r680[2u32].square r12[2u32].square into r736;
    ternary r14 r680[2u32].piece r12[2u32].piece into r737;
    cast r736 r737 into r738 as PlacedPiece;
    ternary r14 r680[3u32].square r12[3u32].square into r739;
    ternary r14 r680[3u32].piece r12[3u32].piece into r740;
    cast r739 r740 into r741 as PlacedPiece;
    ternary r14 r680[4u32].square r12[4u32].square into r742;
    ternary r14 r680[4u32].piece r12[4u32].piece into r743;
    cast r742 r743 into r744 as PlacedPiece;
    ternary r14 r680[5u32].square r12[5u32].square into r745;
    ternary r14 r680[5u32].piece r12[5u32].piece into r746;
    cast r745 r746 into r747 as PlacedPiece;
    ternary r14 r680[6u32].square r12[6u32].square into r748;
    ternary r14 r680[6u32].piece r12[6u32].piece into r749;
    cast r748 r749 into r750 as PlacedPiece;
    ternary r14 r680[7u32].square r12[7u32].square into r751;
    ternary r14 r680[7u32].piece r12[7u32].piece into r752;
    cast r751 r752 into r753 as PlacedPiece;
    ternary r14 r680[8u32].square r12[8u32].square into r754;
    ternary r14 r680[8u32].piece r12[8u32].piece into r755;
    cast r754 r755 into r756 as PlacedPiece;
    ternary r14 r680[9u32].square r12[9u32].square into r757;
    ternary r14 r680[9u32].piece r12[9u32].piece into r758;
    cast r757 r758 into r759 as PlacedPiece;
    ternary r14 r680[10u32].square r12[10u32].square into r760;
    ternary r14 r680[10u32].piece r12[10u32].piece into r761;
    cast r760 r761 into r762 as PlacedPiece;
    ternary r14 r680[11u32].square r12[11u32].square into r763;
    ternary r14 r680[11u32].piece r12[11u32].piece into r764;
    cast r763 r764 into r765 as PlacedPiece;
    ternary r14 r680[12u32].square r12[12u32].square into r766;
    ternary r14 r680[12u32].piece r12[12u32].piece into r767;
    cast r766 r767 into r768 as PlacedPiece;
    ternary r14 r680[13u32].square r12[13u32].square into r769;
    ternary r14 r680[13u32].piece r12[13u32].piece into r770;
    cast r769 r770 into r771 as PlacedPiece;
    ternary r14 r680[14u32].square r12[14u32].square into r772;
    ternary r14 r680[14u32].piece r12[14u32].piece into r773;
    cast r772 r773 into r774 as PlacedPiece;
    ternary r14 r680[15u32].square r12[15u32].square into r775;
    ternary r14 r680[15u32].piece r12[15u32].piece into r776;
    cast r775 r776 into r777 as PlacedPiece;
    cast  r732 r735 r738 r741 r744 r747 r750 r753 r756 r759 r762 r765 r768 r771 r774 r777 into r778 as [PlacedPiece; 16u32];
    ternary r14 r729[0u32].square r13[0u32].square into r779;
    ternary r14 r729[0u32].piece r13[0u32].piece into r780;
    cast r779 r780 into r781 as PlacedPiece;
    ternary r14 r729[1u32].square r13[1u32].square into r782;
    ternary r14 r729[1u32].piece r13[1u32].piece into r783;
    cast r782 r783 into r784 as PlacedPiece;
    ternary r14 r729[2u32].square r13[2u32].square into r785;
    ternary r14 r729[2u32].piece r13[2u32].piece into r786;
    cast r785 r786 into r787 as PlacedPiece;
    ternary r14 r729[3u32].square r13[3u32].square into r788;
    ternary r14 r729[3u32].piece r13[3u32].piece into r789;
    cast r788 r789 into r790 as PlacedPiece;
    ternary r14 r729[4u32].square r13[4u32].square into r791;
    ternary r14 r729[4u32].piece r13[4u32].piece into r792;
    cast r791 r792 into r793 as PlacedPiece;
    ternary r14 r729[5u32].square r13[5u32].square into r794;
    ternary r14 r729[5u32].piece r13[5u32].piece into r795;
    cast r794 r795 into r796 as PlacedPiece;
    ternary r14 r729[6u32].square r13[6u32].square into r797;
    ternary r14 r729[6u32].piece r13[6u32].piece into r798;
    cast r797 r798 into r799 as PlacedPiece;
    ternary r14 r729[7u32].square r13[7u32].square into r800;
    ternary r14 r729[7u32].piece r13[7u32].piece into r801;
    cast r800 r801 into r802 as PlacedPiece;
    ternary r14 r729[8u32].square r13[8u32].square into r803;
    ternary r14 r729[8u32].piece r13[8u32].piece into r804;
    cast r803 r804 into r805 as PlacedPiece;
    ternary r14 r729[9u32].square r13[9u32].square into r806;
    ternary r14 r729[9u32].piece r13[9u32].piece into r807;
    cast r806 r807 into r808 as PlacedPiece;
    ternary r14 r729[10u32].square r13[10u32].square into r809;
    ternary r14 r729[10u32].piece r13[10u32].piece into r810;
    cast r809 r810 into r811 as PlacedPiece;
    ternary r14 r729[11u32].square r13[11u32].square into r812;
    ternary r14 r729[11u32].piece r13[11u32].piece into r813;
    cast r812 r813 into r814 as PlacedPiece;
    ternary r14 r729[12u32].square r13[12u32].square into r815;
    ternary r14 r729[12u32].piece r13[12u32].piece into r816;
    cast r815 r816 into r817 as PlacedPiece;
    ternary r14 r729[13u32].square r13[13u32].square into r818;
    ternary r14 r729[13u32].piece r13[13u32].piece into r819;
    cast r818 r819 into r820 as PlacedPiece;
    ternary r14 r729[14u32].square r13[14u32].square into r821;
    ternary r14 r729[14u32].piece r13[14u32].piece into r822;
    cast r821 r822 into r823 as PlacedPiece;
    ternary r14 r729[15u32].square r13[15u32].square into r824;
    ternary r14 r729[15u32].piece r13[15u32].piece into r825;
    cast r824 r825 into r826 as PlacedPiece;
    cast  r781 r784 r787 r790 r793 r796 r799 r802 r805 r808 r811 r814 r817 r820 r823 r826 into r827 as [PlacedPiece; 16u32];
    add r0.game.board.ply 1field into r828;
    not r0.game.board.odd_ply into r829;
    cast r778 r827 r828 r829 into r830 as Board;
    cast r0.game.white r0.game.black r830 0field into r831 as Game;
    is.eq r0.bomb r1 into r832;
    ternary r832 64field r0.bomb into r833;
    cast self.caller r831 r833 into r834 as PlayerState.record;
    ternary r2 r0.game.white self.caller into r835;
    cast r835 r831 into r836 as GameToken.record;
    output r834 as PlayerState.record;
    output r836 as GameToken.record;




